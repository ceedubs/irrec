Index.PACKAGES = {"ceedubs.irrec.parse" : [{"name" : "ceedubs.irrec.parse.Parser", "shortDescription" : "", "object" : "ceedubs\/irrec\/parse\/Parser$.html", "members_object" : [{"label" : "parseRegex", "tail" : "(regex: String): Either[String, RegexC[String]]", "member" : "ceedubs.irrec.parse.Parser.parseRegex", "link" : "ceedubs\/irrec\/parse\/Parser$.html#parseRegex(regex:String):Either[String,ceedubs.irrec.regex.RegexC[String]]", "kind" : "def"}, {"label" : "regexExpr", "tail" : "(arg0: P[Any]): P[RegexC[String]]", "member" : "ceedubs.irrec.parse.Parser.regexExpr", "link" : "ceedubs\/irrec\/parse\/Parser$.html#regexExpr[_](implicitevidence$23:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.RegexC[String]]", "kind" : "def"}, {"label" : "regex", "tail" : "(arg0: P[Any]): P[RegexC[Unit]]", "member" : "ceedubs.irrec.parse.Parser.regex", "link" : "ceedubs\/irrec\/parse\/Parser$.html#regex[_](implicitevidence$22:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.RegexC[Unit]]", "kind" : "def"}, {"label" : "term", "tail" : "(arg0: P[Any]): P[RegexC[Unit]]", "member" : "ceedubs.irrec.parse.Parser.term", "link" : "ceedubs\/irrec\/parse\/Parser$.html#term[_](implicitevidence$21:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.RegexC[Unit]]", "kind" : "def"}, {"label" : "factor", "tail" : "(arg0: P[Any]): P[RegexC[Unit]]", "member" : "ceedubs.irrec.parse.Parser.factor", "link" : "ceedubs\/irrec\/parse\/Parser$.html#factor[_](implicitevidence$20:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.RegexC[Unit]]", "kind" : "def"}, {"label" : "base", "tail" : "(arg0: P[Any]): P[RegexC[Unit]]", "member" : "ceedubs.irrec.parse.Parser.base", "link" : "ceedubs\/irrec\/parse\/Parser$.html#base[_](implicitevidence$19:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.RegexC[Unit]]", "kind" : "def"}, {"label" : "charClass", "tail" : "(arg0: P[Any]): P[MatchSet[Char]]", "member" : "ceedubs.irrec.parse.Parser.charClass", "link" : "ceedubs\/irrec\/parse\/Parser$.html#charClass[_](implicitevidence$18:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.MatchSet[Char]]", "kind" : "def"}, {"label" : "charClassTerm", "tail" : "(arg0: P[Any]): P[MatchSet[Char]]", "member" : "ceedubs.irrec.parse.Parser.charClassTerm", "link" : "ceedubs\/irrec\/parse\/Parser$.html#charClassTerm[_](implicitevidence$17:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.MatchSet[Char]]", "kind" : "def"}, {"label" : "charClassUnion", "tail" : "(arg0: P[Any]): P[MatchSet[Char]]", "member" : "ceedubs.irrec.parse.Parser.charClassUnion", "link" : "ceedubs\/irrec\/parse\/Parser$.html#charClassUnion[_](implicitevidence$16:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.MatchSet[Char]]", "kind" : "def"}, {"label" : "charClassBase", "tail" : "(arg0: P[Any]): P[MatchSet[Char]]", "member" : "ceedubs.irrec.parse.Parser.charClassBase", "link" : "ceedubs\/irrec\/parse\/Parser$.html#charClassBase[_](implicitevidence$15:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.MatchSet[Char]]", "kind" : "def"}, {"label" : "positiveCharClassContent", "tail" : "(arg0: P[Any]): P[MatchSet[Char]]", "member" : "ceedubs.irrec.parse.Parser.positiveCharClassContent", "link" : "ceedubs\/irrec\/parse\/Parser$.html#positiveCharClassContent[_](implicitevidence$14:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.MatchSet[Char]]", "kind" : "def"}, {"label" : "positivePOSIXCharClass", "tail" : "(arg0: P[Any]): P[MatchSet[Char]]", "member" : "ceedubs.irrec.parse.Parser.positivePOSIXCharClass", "link" : "ceedubs\/irrec\/parse\/Parser$.html#positivePOSIXCharClass[_](implicitevidence$13:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.MatchSet[Char]]", "kind" : "def"}, {"label" : "charOrRange", "tail" : "(arg0: P[Any]): P[MatchSet[Char]]", "member" : "ceedubs.irrec.parse.Parser.charOrRange", "link" : "ceedubs\/irrec\/parse\/Parser$.html#charOrRange[_](implicitevidence$12:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.MatchSet[Char]]", "kind" : "def"}, {"label" : "quantifier", "tail" : "(arg0: P[Any]): P[Quantifier]", "member" : "ceedubs.irrec.parse.Parser.quantifier", "link" : "ceedubs\/irrec\/parse\/Parser$.html#quantifier[_](implicitevidence$11:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Quantifier]", "kind" : "def"}, {"label" : "matchCharRange", "tail" : "(arg0: P[Any]): P[Range[Char]]", "member" : "ceedubs.irrec.parse.Parser.matchCharRange", "link" : "ceedubs\/irrec\/parse\/Parser$.html#matchCharRange[_](implicitevidence$10:fastparse.P[Any]):fastparse.P[cats.collections.Range[Char]]", "kind" : "def"}, {"label" : "matchLitCharClassChar", "tail" : "(arg0: P[Any]): P[Literal[Char]]", "member" : "ceedubs.irrec.parse.Parser.matchLitCharClassChar", "link" : "ceedubs\/irrec\/parse\/Parser$.html#matchLitCharClassChar[_](implicitevidence$9:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.Literal[Char]]", "kind" : "def"}, {"label" : "singleLitCharClassChar", "tail" : "(arg0: P[Any]): P[Char]", "member" : "ceedubs.irrec.parse.Parser.singleLitCharClassChar", "link" : "ceedubs\/irrec\/parse\/Parser$.html#singleLitCharClassChar[_](implicitevidence$8:fastparse.P[Any]):fastparse.P[Char]", "kind" : "def"}, {"label" : "posInt", "tail" : "(arg0: P[Any]): P[Int]", "member" : "ceedubs.irrec.parse.Parser.posInt", "link" : "ceedubs\/irrec\/parse\/Parser$.html#posInt[_](implicitevidence$7:fastparse.P[Any]):fastparse.P[Int]", "kind" : "def"}, {"label" : "wildcard", "tail" : "(arg0: P[Any]): P[RegexC[Char]]", "member" : "ceedubs.irrec.parse.Parser.wildcard", "link" : "ceedubs\/irrec\/parse\/Parser$.html#wildcard[_](implicitevidence$6:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.RegexC[Char]]", "kind" : "def"}, {"label" : "charClassStandardMatchChar", "tail" : "(arg0: P[Any]): P[Char]", "member" : "ceedubs.irrec.parse.Parser.charClassStandardMatchChar", "link" : "ceedubs\/irrec\/parse\/Parser$.html#charClassStandardMatchChar[_](implicitevidence$5:fastparse.P[Any]):fastparse.P[Char]", "kind" : "def"}, {"label" : "standardMatchChar", "tail" : "(arg0: P[Any]): P[Char]", "member" : "ceedubs.irrec.parse.Parser.standardMatchChar", "link" : "ceedubs\/irrec\/parse\/Parser$.html#standardMatchChar[_](implicitevidence$4:fastparse.P[Any]):fastparse.P[Char]", "kind" : "def"}, {"label" : "shorthandClass", "tail" : "(arg0: P[Any]): P[MatchSet[Char]]", "member" : "ceedubs.irrec.parse.Parser.shorthandClass", "link" : "ceedubs\/irrec\/parse\/Parser$.html#shorthandClass[_](implicitevidence$3:fastparse.P[Any]):fastparse.P[ceedubs.irrec.regex.Match.MatchSet[Char]]", "kind" : "def"}, {"label" : "unicodeCodePoint", "tail" : "(arg0: P[Any]): P[Char]", "member" : "ceedubs.irrec.parse.Parser.unicodeCodePoint", "link" : "ceedubs\/irrec\/parse\/Parser$.html#unicodeCodePoint[_](implicitevidence$2:fastparse.P[Any]):fastparse.P[Char]", "kind" : "def"}, {"label" : "specialChar", "tail" : "(arg0: P[Any]): P[Char]", "member" : "ceedubs.irrec.parse.Parser.specialChar", "link" : "ceedubs\/irrec\/parse\/Parser$.html#specialChar[_](implicitevidence$1:fastparse.P[Any]):fastparse.P[Char]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/parse\/Parser$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/parse\/Parser$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/parse\/Parser$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/parse\/Parser$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/parse\/Parser$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/parse\/Parser$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/parse\/Parser$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/parse\/Parser$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/parse\/Parser$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/parse\/Parser$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/parse\/Parser$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/parse\/Parser$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/parse\/Parser$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/parse\/Parser$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/parse\/Parser$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/parse\/Parser$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/parse\/Parser$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/parse\/Parser$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/parse\/Parser$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.parse.ParserMacros", "shortDescription" : "", "object" : "ceedubs\/irrec\/parse\/ParserMacros$.html", "members_object" : [{"label" : "parseLiteralImpl", "tail" : "(c: Context)(regex: scala.reflect.macros.blackbox.Context.Expr[String]): scala.reflect.macros.blackbox.Context.Expr[RegexC[String]]", "member" : "ceedubs.irrec.parse.ParserMacros.parseLiteralImpl", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#parseLiteralImpl(c:scala.reflect.macros.blackbox.Context)(regex:c.Expr[String]):c.Expr[ceedubs.irrec.regex.RegexC[String]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/parse\/ParserMacros$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}], "ceedubs" : [], "ceedubs.irrec" : [], "ceedubs.irrec.regex.gen" : [{"name" : "ceedubs.irrec.regex.gen.CharRegexGen", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html", "members_object" : [{"label" : "genRegexCandidateString", "tail" : "(): (RegexC[Out]) => Gen[String]", "member" : "ceedubs.irrec.regex.gen.CharRegexGen.genRegexCandidateString", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#genRegexCandidateString[Out]:ceedubs.irrec.regex.RegexC[Out]=>org.scalacheck.Gen[String]", "kind" : "def"}, {"label" : "genRegexMatchingString", "tail" : "(): (RegexC[Out]) => Gen[String]", "member" : "ceedubs.irrec.regex.gen.CharRegexGen.genRegexMatchingString", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#genRegexMatchingString[Out]:ceedubs.irrec.regex.RegexC[Out]=>org.scalacheck.Gen[String]", "kind" : "def"}, {"label" : "regexMatchingStringGenFromDiet", "tail" : "(available: Diet[Char]): (RegexC[Out]) => Gen[String]", "member" : "ceedubs.irrec.regex.gen.CharRegexGen.regexMatchingStringGenFromDiet", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#regexMatchingStringGenFromDiet[Out](available:cats.collections.Diet[Char]):ceedubs.irrec.regex.RegexC[Out]=>org.scalacheck.Gen[String]", "kind" : "def"}, {"label" : "genCharRegexAndCandidate", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Gen[RegexAndCandidate[Char, Out]]", "member" : "ceedubs.irrec.regex.gen.CharRegexGen.genCharRegexAndCandidate", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#genCharRegexAndCandidate[Out](implicitevidence$15:org.scalacheck.Arbitrary[Out],implicitevidence$16:org.scalacheck.Cogen[Out]):org.scalacheck.Gen[ceedubs.irrec.regex.gen.RegexAndCandidate[Char,Out]]", "kind" : "def"}, {"label" : "genAlphaNumRegexAndCandidate", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Gen[RegexAndCandidate[Char, Out]]", "member" : "ceedubs.irrec.regex.gen.CharRegexGen.genAlphaNumRegexAndCandidate", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#genAlphaNumRegexAndCandidate[Out](implicitevidence$13:org.scalacheck.Arbitrary[Out],implicitevidence$14:org.scalacheck.Cogen[Out]):org.scalacheck.Gen[ceedubs.irrec.regex.gen.RegexAndCandidate[Char,Out]]", "kind" : "def"}, {"label" : "genAlphaNumRegexAndMatch", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Gen[RegexAndCandidate[Char, Out]]", "member" : "ceedubs.irrec.regex.gen.CharRegexGen.genAlphaNumRegexAndMatch", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#genAlphaNumRegexAndMatch[Out](implicitevidence$11:org.scalacheck.Arbitrary[Out],implicitevidence$12:org.scalacheck.Cogen[Out]):org.scalacheck.Gen[ceedubs.irrec.regex.gen.RegexAndCandidate[Char,Out]]", "kind" : "def"}, {"label" : "genSupportedRegexAndMatch", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Gen[RegexAndCandidate[Char, Out]]", "member" : "ceedubs.irrec.regex.gen.CharRegexGen.genSupportedRegexAndMatch", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#genSupportedRegexAndMatch[Out](implicitevidence$9:org.scalacheck.Arbitrary[Out],implicitevidence$10:org.scalacheck.Cogen[Out]):org.scalacheck.Gen[ceedubs.irrec.regex.gen.RegexAndCandidate[Char,Out]]", "kind" : "def"}, {"label" : "genSupportedChars", "tail" : ": Gen[Char]", "member" : "ceedubs.irrec.regex.gen.CharRegexGen.genSupportedChars", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#genSupportedChars:org.scalacheck.Gen[Char]", "kind" : "val"}, {"label" : "genStandardCharRegex", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Gen[RegexC[Out]]", "member" : "ceedubs.irrec.regex.gen.CharRegexGen.genStandardCharRegex", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#genStandardCharRegex[Out](implicitevidence$7:org.scalacheck.Arbitrary[Out],implicitevidence$8:org.scalacheck.Cogen[Out]):org.scalacheck.Gen[ceedubs.irrec.regex.RegexC[Out]]", "kind" : "def"}, {"label" : "genAsciiRegex", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Gen[RegexC[Out]]", "member" : "ceedubs.irrec.regex.gen.CharRegexGen.genAsciiRegex", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#genAsciiRegex[Out](implicitevidence$5:org.scalacheck.Arbitrary[Out],implicitevidence$6:org.scalacheck.Cogen[Out]):org.scalacheck.Gen[ceedubs.irrec.regex.RegexC[Out]]", "kind" : "def"}, {"label" : "genAlphaNumRegex", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Gen[RegexC[Out]]", "member" : "ceedubs.irrec.regex.gen.CharRegexGen.genAlphaNumRegex", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#genAlphaNumRegex[Out](implicitevidence$3:org.scalacheck.Arbitrary[Out],implicitevidence$4:org.scalacheck.Cogen[Out]):org.scalacheck.Gen[ceedubs.irrec.regex.RegexC[Out]]", "kind" : "def"}, {"label" : "genSupportedCharRegex", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Gen[RegexC[Out]]", "member" : "ceedubs.irrec.regex.gen.CharRegexGen.genSupportedCharRegex", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#genSupportedCharRegex[Out](implicitevidence$1:org.scalacheck.Arbitrary[Out],implicitevidence$2:org.scalacheck.Cogen[Out]):org.scalacheck.Gen[ceedubs.irrec.regex.RegexC[Out]]", "kind" : "def"}, {"label" : "supportedCharRegexGenConfig", "tail" : ": Config[Char]", "member" : "ceedubs.irrec.regex.gen.CharRegexGen.supportedCharRegexGenConfig", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#supportedCharRegexGenConfig:ceedubs.irrec.regex.gen.RegexGen.Config[Char]", "kind" : "val"}, {"label" : "supportedCharacters", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.gen.CharRegexGen.supportedCharacters", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#supportedCharacters:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/CharRegexGen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.gen.DietGen", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html", "members_object" : [{"label" : "genDiscreteDiet", "tail" : "(genA: Gen[A])(arg0: Discrete[A], arg1: Order[A]): Gen[Diet[A]]", "member" : "ceedubs.irrec.regex.gen.DietGen.genDiscreteDiet", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#genDiscreteDiet[A](genA:org.scalacheck.Gen[A])(implicitevidence$5:cats.collections.Discrete[A],implicitevidence$6:cats.kernel.Order[A]):org.scalacheck.Gen[cats.collections.Diet[A]]", "kind" : "def"}, {"label" : "genRange", "tail" : "(genA: Gen[A])(orderingA: Order[A]): Gen[Range[A]]", "member" : "ceedubs.irrec.regex.gen.DietGen.genRange", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#genRange[A](genA:org.scalacheck.Gen[A])(implicitorderingA:cats.kernel.Order[A]):org.scalacheck.Gen[cats.collections.Range[A]]", "kind" : "def"}, {"label" : "genWeightedDietRange", "tail" : "(diet: Diet[A], weight: (Range[A]) => Int): Gen[Range[A]]", "member" : "ceedubs.irrec.regex.gen.DietGen.genWeightedDietRange", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#genWeightedDietRange[A](diet:cats.collections.Diet[A],weight:cats.collections.Range[A]=>Int):org.scalacheck.Gen[cats.collections.Range[A]]", "kind" : "def"}, {"label" : "dietMatchingGen", "tail" : "(diet: Diet[A])(arg0: Choose[A]): Gen[A]", "member" : "ceedubs.irrec.regex.gen.DietGen.dietMatchingGen", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#dietMatchingGen[A](diet:cats.collections.Diet[A])(implicitevidence$4:org.scalacheck.Gen.Choose[A]):org.scalacheck.Gen[A]", "kind" : "def"}, {"label" : "weightedDietMatchingGen", "tail" : "(diet: Diet[A], weight: (Range[A]) => Int)(chooseA: Choose[A]): Gen[A]", "member" : "ceedubs.irrec.regex.gen.DietGen.weightedDietMatchingGen", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#weightedDietMatchingGen[A](diet:cats.collections.Diet[A],weight:cats.collections.Range[A]=>Int)(implicitchooseA:org.scalacheck.Gen.Choose[A]):org.scalacheck.Gen[A]", "kind" : "def"}, {"label" : "genNonEmptySubDiet", "tail" : "(diet: Diet[A], weight: (Range[A]) => Int)(arg0: Choose[A], arg1: Discrete[A], arg2: Order[A]): Gen[Diet[A]]", "member" : "ceedubs.irrec.regex.gen.DietGen.genNonEmptySubDiet", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#genNonEmptySubDiet[A](diet:cats.collections.Diet[A],weight:cats.collections.Range[A]=>Int)(implicitevidence$1:org.scalacheck.Gen.Choose[A],implicitevidence$2:cats.collections.Discrete[A],implicitevidence$3:cats.kernel.Order[A]):org.scalacheck.Gen[cats.collections.Diet[A]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/DietGen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.gen.GreedinessGen", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html", "members_object" : [{"label" : "genGreediness", "tail" : ": Gen[Greediness]", "member" : "ceedubs.irrec.regex.gen.GreedinessGen.genGreediness", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#genGreediness:org.scalacheck.Gen[ceedubs.irrec.regex.Greediness]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/GreedinessGen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.gen.QuantifierGen", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html", "members_object" : [{"label" : "genCount", "tail" : "(q: Quantifier): Gen[Int]", "member" : "ceedubs.irrec.regex.gen.QuantifierGen.genCount", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#genCount(q:ceedubs.irrec.regex.Quantifier):org.scalacheck.Gen[Int]", "kind" : "def"}, {"label" : "genQuantifier", "tail" : ": Gen[Quantifier]", "member" : "ceedubs.irrec.regex.gen.QuantifierGen.genQuantifier", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#genQuantifier:org.scalacheck.Gen[ceedubs.irrec.regex.Quantifier]", "kind" : "val"}, {"label" : "genRange", "tail" : ": Gen[Range]", "member" : "ceedubs.irrec.regex.gen.QuantifierGen.genRange", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#genRange:org.scalacheck.Gen[ceedubs.irrec.regex.Quantifier.Range]", "kind" : "val"}, {"label" : "genExact", "tail" : ": Gen[Exact]", "member" : "ceedubs.irrec.regex.gen.QuantifierGen.genExact", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#genExact:org.scalacheck.Gen[ceedubs.irrec.regex.Quantifier.Exact]", "kind" : "val"}, {"label" : "genOptional", "tail" : ": Gen[Optional]", "member" : "ceedubs.irrec.regex.gen.QuantifierGen.genOptional", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#genOptional:org.scalacheck.Gen[ceedubs.irrec.regex.Quantifier.Optional]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/QuantifierGen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.gen.RegexAndCandidate", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html", "members_object" : [{"label" : "arbRegexAndCandidate", "tail" : "(arbRegex: Arbitrary[RegexM[In, Out]], candidateGen: RegexCandidates[In, Match[In]]): Arbitrary[RegexAndCandidate[In, Out]]", "member" : "ceedubs.irrec.regex.gen.RegexAndCandidate.arbRegexAndCandidate", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#arbRegexAndCandidate[In,Out](implicitarbRegex:org.scalacheck.Arbitrary[ceedubs.irrec.regex.RegexM[In,Out]],implicitcandidateGen:ceedubs.irrec.regex.gen.RegexCandidates[In,ceedubs.irrec.regex.Match[In]]):org.scalacheck.Arbitrary[ceedubs.irrec.regex.gen.RegexAndCandidate[In,Out]]", "kind" : "implicit def"}, {"label" : "genRegexAndCandidate", "tail" : "(cfg: Config[In], matchToGen: (Match[In]) => Gen[In])(arg0: Cogen[In], arg1: Order[In], arg2: Arbitrary[Out], arg3: Cogen[Out]): Gen[RegexAndCandidate[In, Out]]", "member" : "ceedubs.irrec.regex.gen.RegexAndCandidate.genRegexAndCandidate", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#genRegexAndCandidate[In,Out](cfg:ceedubs.irrec.regex.gen.RegexGen.Config[In],matchToGen:ceedubs.irrec.regex.Match[In]=>org.scalacheck.Gen[In])(implicitevidence$7:org.scalacheck.Cogen[In],implicitevidence$8:cats.Order[In],implicitevidence$9:org.scalacheck.Arbitrary[Out],implicitevidence$10:org.scalacheck.Cogen[Out]):org.scalacheck.Gen[ceedubs.irrec.regex.gen.RegexAndCandidate[In,Out]]", "kind" : "def"}, {"label" : "genCandidateStream", "tail" : "(matchToGen: (Match[In]) => Gen[In]): (RegexM[In, _]) => Gen[Stream[In]]", "member" : "ceedubs.irrec.regex.gen.RegexAndCandidate.genCandidateStream", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#genCandidateStream[In](matchToGen:ceedubs.irrec.regex.Match[In]=>org.scalacheck.Gen[In]):ceedubs.irrec.regex.RegexM[In,_]=>org.scalacheck.Gen[Stream[In]]", "kind" : "def"}, {"label" : "genIntRegexAndMatch", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Gen[RegexAndCandidate[Int, Out]]", "member" : "ceedubs.irrec.regex.gen.RegexAndCandidate.genIntRegexAndMatch", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#genIntRegexAndMatch[Out](implicitevidence$5:org.scalacheck.Arbitrary[Out],implicitevidence$6:org.scalacheck.Cogen[Out]):org.scalacheck.Gen[ceedubs.irrec.regex.gen.RegexAndCandidate[Int,Out]]", "kind" : "def"}, {"label" : "genRegexAndMatch", "tail" : "(cfg: Config[In], matchToGen: (Match[In]) => Gen[In])(arg0: Cogen[In], arg1: Order[In], arg2: Arbitrary[Out], arg3: Cogen[Out]): Gen[RegexAndCandidate[In, Out]]", "member" : "ceedubs.irrec.regex.gen.RegexAndCandidate.genRegexAndMatch", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#genRegexAndMatch[In,Out](cfg:ceedubs.irrec.regex.gen.RegexGen.Config[In],matchToGen:ceedubs.irrec.regex.Match[In]=>org.scalacheck.Gen[In])(implicitevidence$1:org.scalacheck.Cogen[In],implicitevidence$2:cats.Order[In],implicitevidence$3:org.scalacheck.Arbitrary[Out],implicitevidence$4:org.scalacheck.Cogen[Out]):org.scalacheck.Gen[ceedubs.irrec.regex.gen.RegexAndCandidate[In,Out]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"member" : "ceedubs.irrec.regex.gen.RegexAndCandidate#<init>", "error" : "unsupported entity"}, {"label" : "candidate", "tail" : ": Stream[In]", "member" : "ceedubs.irrec.regex.gen.RegexAndCandidate.candidate", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#candidate:Stream[In]", "kind" : "val"}, {"label" : "r", "tail" : ": RegexM[In, Out]", "member" : "ceedubs.irrec.regex.gen.RegexAndCandidate.r", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#r:ceedubs.irrec.regex.RegexM[In,Out]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ceedubs\/irrec\/regex\/gen\/RegexAndCandidate.html", "kind" : "case class"}, {"name" : "ceedubs.irrec.regex.gen.RegexCandidates", "object" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html", "members_object" : [{"label" : "regexMLongCandidates", "tail" : ": RegexCandidates[Long, Match[Long]]", "member" : "ceedubs.irrec.regex.gen.RegexCandidates.regexMLongCandidates", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#regexMLongCandidates:ceedubs.irrec.regex.gen.RegexCandidates[Long,ceedubs.irrec.regex.Match[Long]]", "kind" : "implicit val"}, {"label" : "regexMIntCandidates", "tail" : ": RegexCandidates[Int, Match[Int]]", "member" : "ceedubs.irrec.regex.gen.RegexCandidates.regexMIntCandidates", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#regexMIntCandidates:ceedubs.irrec.regex.gen.RegexCandidates[Int,ceedubs.irrec.regex.Match[Int]]", "kind" : "implicit val"}, {"label" : "regexMByteCandidates", "tail" : ": RegexCandidates[Byte, Match[Byte]]", "member" : "ceedubs.irrec.regex.gen.RegexCandidates.regexMByteCandidates", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#regexMByteCandidates:ceedubs.irrec.regex.gen.RegexCandidates[Byte,ceedubs.irrec.regex.Match[Byte]]", "kind" : "implicit val"}, {"label" : "regexCCandidates", "tail" : ": RegexCandidates[Char, Match[Char]]", "member" : "ceedubs.irrec.regex.gen.RegexCandidates.regexCCandidates", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#regexCCandidates:ceedubs.irrec.regex.gen.RegexCandidates[Char,ceedubs.irrec.regex.Match[Char]]", "kind" : "implicit val"}, {"label" : "GenInRegexCandidates", "tail" : "", "member" : "ceedubs.irrec.regex.gen.RegexCandidates.GenInRegexCandidates", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#GenInRegexCandidates[In,M]extendsRegexCandidates[In,M]", "kind" : "trait"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "trait" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html", "kind" : "trait", "members_trait" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "genCandidateStream", "tail" : "(r: Regex[In, M, Out]): Gen[Stream[In]]", "member" : "ceedubs.irrec.regex.gen.RegexCandidates.genCandidateStream", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#genCandidateStream[Out](r:ceedubs.irrec.regex.Regex[In,M,Out]):org.scalacheck.Gen[Stream[In]]", "kind" : "abstract def"}, {"label" : "genMatchingStream", "tail" : "(r: Regex[In, M, Out]): Gen[Stream[In]]", "member" : "ceedubs.irrec.regex.gen.RegexCandidates.genMatchingStream", "link" : "ceedubs\/irrec\/regex\/gen\/RegexCandidates.html#genMatchingStream[Out](r:ceedubs.irrec.regex.Regex[In,M,Out]):org.scalacheck.Gen[Stream[In]]", "kind" : "abstract def"}], "shortDescription" : ""}, {"name" : "ceedubs.irrec.regex.gen.RegexEq", "shortDescription" : "This defines \"equality\" for regular expressions based on whether they produce the same result fora random sampling of inputs.", "object" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html", "members_object" : [{"label" : "SamplingRegexEqK", "tail" : "", "member" : "ceedubs.irrec.regex.gen.RegexEq.SamplingRegexEqK", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#SamplingRegexEqK[In,M]extendscats.Eq~>[a]cats.kernel.Eq[ceedubs.irrec.regex.Regex[In,M,a]]", "kind" : "final class"}, {"label" : "SamplingRegexEq", "tail" : "", "member" : "ceedubs.irrec.regex.gen.RegexEq.SamplingRegexEq", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#SamplingRegexEq[In,M,Out]extendscats.Eq[ceedubs.irrec.regex.Regex[In,M,Out]]", "kind" : "final class"}, {"label" : "genRegexEq", "tail" : "(candidateCount: Int)(rc: RegexCandidates[In, M], eqA: Eq[A]): Gen[Eq[Regex[In, M, A]]]", "member" : "ceedubs.irrec.regex.gen.RegexEq.genRegexEq", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#genRegexEq[In,M,A](candidateCount:Int)(implicitrc:ceedubs.irrec.regex.gen.RegexCandidates[In,M],impliciteqA:cats.Eq[A]):org.scalacheck.Gen[cats.Eq[ceedubs.irrec.regex.Regex[In,M,A]]]", "kind" : "def"}, {"label" : "genRegexEqK", "tail" : "(candidateCount: Int)(rc: RegexCandidates[In, M]): Gen[~>[Eq, [a]Eq[Regex[In, M, a]]]]", "member" : "ceedubs.irrec.regex.gen.RegexEq.genRegexEqK", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#genRegexEqK[In,M](candidateCount:Int)(implicitrc:ceedubs.irrec.regex.gen.RegexCandidates[In,M]):org.scalacheck.Gen[cats.Eq~>[a]cats.kernel.Eq[ceedubs.irrec.regex.Regex[In,M,a]]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/RegexEq$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.gen.RegexGen", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html", "members_object" : [{"label" : "arbQuantifier", "tail" : ": Arbitrary[Quantifier]", "member" : "ceedubs.irrec.regex.gen.RegexGen.arbQuantifier", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#arbQuantifier:org.scalacheck.Arbitrary[ceedubs.irrec.regex.Quantifier]", "kind" : "implicit val"}, {"label" : "arbCharRegex", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Arbitrary[RegexC[Out]]", "member" : "ceedubs.irrec.regex.gen.RegexGen.arbCharRegex", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#arbCharRegex[Out](implicitevidence$25:org.scalacheck.Arbitrary[Out],implicitevidence$26:org.scalacheck.Cogen[Out]):org.scalacheck.Arbitrary[ceedubs.irrec.regex.RegexC[Out]]", "kind" : "implicit def"}, {"label" : "genCharRegex", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Gen[RegexC[Out]]", "member" : "ceedubs.irrec.regex.gen.RegexGen.genCharRegex", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#genCharRegex[Out](implicitevidence$23:org.scalacheck.Arbitrary[Out],implicitevidence$24:org.scalacheck.Cogen[Out]):org.scalacheck.Gen[ceedubs.irrec.regex.RegexC[Out]]", "kind" : "def"}, {"label" : "arbLongRegex", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Arbitrary[RegexM[Long, Out]]", "member" : "ceedubs.irrec.regex.gen.RegexGen.arbLongRegex", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#arbLongRegex[Out](implicitevidence$21:org.scalacheck.Arbitrary[Out],implicitevidence$22:org.scalacheck.Cogen[Out]):org.scalacheck.Arbitrary[ceedubs.irrec.regex.RegexM[Long,Out]]", "kind" : "implicit def"}, {"label" : "genLongRegex", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Gen[RegexM[Long, Out]]", "member" : "ceedubs.irrec.regex.gen.RegexGen.genLongRegex", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#genLongRegex[Out](implicitevidence$19:org.scalacheck.Arbitrary[Out],implicitevidence$20:org.scalacheck.Cogen[Out]):org.scalacheck.Gen[ceedubs.irrec.regex.RegexM[Long,Out]]", "kind" : "def"}, {"label" : "arbIntRegex", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Arbitrary[RegexM[Int, Out]]", "member" : "ceedubs.irrec.regex.gen.RegexGen.arbIntRegex", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#arbIntRegex[Out](implicitevidence$17:org.scalacheck.Arbitrary[Out],implicitevidence$18:org.scalacheck.Cogen[Out]):org.scalacheck.Arbitrary[ceedubs.irrec.regex.RegexM[Int,Out]]", "kind" : "implicit def"}, {"label" : "genIntRegex", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Gen[RegexM[Int, Out]]", "member" : "ceedubs.irrec.regex.gen.RegexGen.genIntRegex", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#genIntRegex[Out](implicitevidence$15:org.scalacheck.Arbitrary[Out],implicitevidence$16:org.scalacheck.Cogen[Out]):org.scalacheck.Gen[ceedubs.irrec.regex.RegexM[Int,Out]]", "kind" : "def"}, {"label" : "arbByteRegex", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Arbitrary[RegexM[Byte, Out]]", "member" : "ceedubs.irrec.regex.gen.RegexGen.arbByteRegex", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#arbByteRegex[Out](implicitevidence$13:org.scalacheck.Arbitrary[Out],implicitevidence$14:org.scalacheck.Cogen[Out]):org.scalacheck.Arbitrary[ceedubs.irrec.regex.RegexM[Byte,Out]]", "kind" : "implicit def"}, {"label" : "genByteRegex", "tail" : "(arg0: Arbitrary[Out], arg1: Cogen[Out]): Gen[RegexM[Byte, Out]]", "member" : "ceedubs.irrec.regex.gen.RegexGen.genByteRegex", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#genByteRegex[Out](implicitevidence$11:org.scalacheck.Arbitrary[Out],implicitevidence$12:org.scalacheck.Cogen[Out]):org.scalacheck.Gen[ceedubs.irrec.regex.RegexM[Byte,Out]]", "kind" : "def"}, {"label" : "genRegex", "tail" : "(cfg: Config[In])(arg0: Arbitrary[Out], arg1: Cogen[Out]): Gen[RegexM[In, Out]]", "member" : "ceedubs.irrec.regex.gen.RegexGen.genRegex", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#genRegex[In,Out](cfg:ceedubs.irrec.regex.gen.RegexGen.Config[In])(implicitevidence$9:org.scalacheck.Arbitrary[Out],implicitevidence$10:org.scalacheck.Cogen[Out]):org.scalacheck.Gen[ceedubs.irrec.regex.RegexM[In,Out]]", "kind" : "def"}, {"label" : "arbGreendiness", "tail" : ": Arbitrary[Greediness]", "member" : "ceedubs.irrec.regex.gen.RegexGen.arbGreendiness", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#arbGreendiness:org.scalacheck.Arbitrary[ceedubs.irrec.regex.Greediness]", "kind" : "implicit val"}, {"label" : "standardLongConfig", "tail" : ": Config[Long]", "member" : "ceedubs.irrec.regex.gen.RegexGen.standardLongConfig", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#standardLongConfig:ceedubs.irrec.regex.gen.RegexGen.Config[Long]", "kind" : "val"}, {"label" : "standardIntConfig", "tail" : ": Config[Int]", "member" : "ceedubs.irrec.regex.gen.RegexGen.standardIntConfig", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#standardIntConfig:ceedubs.irrec.regex.gen.RegexGen.Config[Int]", "kind" : "val"}, {"label" : "standardByteConfig", "tail" : ": Config[Byte]", "member" : "ceedubs.irrec.regex.gen.RegexGen.standardByteConfig", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#standardByteConfig:ceedubs.irrec.regex.gen.RegexGen.Config[Byte]", "kind" : "val"}, {"label" : "genMatch", "tail" : "(genA: Gen[A], genDietA: Gen[Diet[A]])(arg0: Discrete[A], arg1: Order[A]): Gen[Match[A]]", "member" : "ceedubs.irrec.regex.gen.RegexGen.genMatch", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#genMatch[A](genA:org.scalacheck.Gen[A],genDietA:org.scalacheck.Gen[cats.collections.Diet[A]])(implicitevidence$5:cats.collections.Discrete[A],implicitevidence$6:cats.Order[A]):org.scalacheck.Gen[ceedubs.irrec.regex.Match[A]]", "kind" : "def"}, {"label" : "Config", "tail" : "", "member" : "ceedubs.irrec.regex.gen.RegexGen.Config", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#Config", "kind" : "object"}, {"label" : "Config", "tail" : "", "member" : "ceedubs.irrec.regex.gen.RegexGen.Config", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#Config[In]extendsProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/RegexGen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.gen.RegexMatchGen", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html", "members_object" : [{"label" : "genRegexMatch", "tail" : "(r: Regex[In, M, Out])(rc: RegexCandidates[In, M]): Gen[Stream[In]]", "member" : "ceedubs.irrec.regex.gen.RegexMatchGen.genRegexMatch", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#genRegexMatch[In,M,Out](r:ceedubs.irrec.regex.Regex[In,M,Out])(implicitrc:ceedubs.irrec.regex.gen.RegexCandidates[In,M]):org.scalacheck.Gen[Stream[In]]", "kind" : "def"}, {"label" : "dietRegexMatchingStreamGen", "tail" : "(available: Diet[In])(arg0: Choose[In], arg1: Discrete[In], arg2: Order[In]): (RegexM[In, Out]) => Gen[Stream[In]]", "member" : "ceedubs.irrec.regex.gen.RegexMatchGen.dietRegexMatchingStreamGen", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#dietRegexMatchingStreamGen[In,Out](available:cats.collections.Diet[In])(implicitevidence$1:org.scalacheck.Gen.Choose[In],implicitevidence$2:cats.collections.Discrete[In],implicitevidence$3:cats.Order[In]):ceedubs.irrec.regex.RegexM[In,Out]=>org.scalacheck.Gen[Stream[In]]", "kind" : "def"}, {"label" : "regexMMatchingStreamGen", "tail" : "(matchGen: (Match[In]) => Gen[In]): ~>[[β$10$]Regex[In, Match[In], β$10$], [a]Gen[Stream[In]]]", "member" : "ceedubs.irrec.regex.gen.RegexMatchGen.regexMMatchingStreamGen", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#regexMMatchingStreamGen[In](matchGen:ceedubs.irrec.regex.Match[In]=>org.scalacheck.Gen[In]):[β$10$]ceedubs.irrec.regex.Regex[In,ceedubs.irrec.regex.Match[In],β$10$]~>[a]org.scalacheck.Gen[scala.collection.immutable.Stream[In]]", "kind" : "def"}, {"label" : "regexMatchingStreamGen", "tail" : "(matchGen: (M) => Gen[In]): ~>[[γ$0$]Regex[In, M, γ$0$], [a]Gen[Stream[In]]]", "member" : "ceedubs.irrec.regex.gen.RegexMatchGen.regexMatchingStreamGen", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#regexMatchingStreamGen[In,M](matchGen:M=>org.scalacheck.Gen[In]):[γ$0$]ceedubs.irrec.regex.Regex[In,M,γ$0$]~>[a]org.scalacheck.Gen[scala.collection.immutable.Stream[In]]", "kind" : "def"}, {"label" : "longMatchingGen", "tail" : ": (Match[Long]) => Gen[Long]", "member" : "ceedubs.irrec.regex.gen.RegexMatchGen.longMatchingGen", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#longMatchingGen:ceedubs.irrec.regex.Match[Long]=>org.scalacheck.Gen[Long]", "kind" : "val"}, {"label" : "intMatchingGen", "tail" : ": (Match[Int]) => Gen[Int]", "member" : "ceedubs.irrec.regex.gen.RegexMatchGen.intMatchingGen", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#intMatchingGen:ceedubs.irrec.regex.Match[Int]=>org.scalacheck.Gen[Int]", "kind" : "val"}, {"label" : "byteMatchingGen", "tail" : ": (Match[Byte]) => Gen[Byte]", "member" : "ceedubs.irrec.regex.gen.RegexMatchGen.byteMatchingGen", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#byteMatchingGen:ceedubs.irrec.regex.Match[Byte]=>org.scalacheck.Gen[Byte]", "kind" : "val"}, {"label" : "dietMatchToGen", "tail" : "(available: Diet[A], dietToGen: (Diet[A]) => Gen[A])(orderA: Order[A], discreteA: Discrete[A]): (Match[A]) => Gen[A]", "member" : "ceedubs.irrec.regex.gen.RegexMatchGen.dietMatchToGen", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#dietMatchToGen[A](available:cats.collections.Diet[A],dietToGen:cats.collections.Diet[A]=>org.scalacheck.Gen[A])(implicitorderA:cats.Order[A],implicitdiscreteA:cats.collections.Discrete[A]):ceedubs.irrec.regex.Match[A]=>org.scalacheck.Gen[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/RegexMatchGen$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.gen.TypeWith", "shortDescription" : "As presented by Erik Osheim https:\/\/www.youtube.com\/watch?v=O78hnJuzQwA", "object" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html", "members_class" : [{"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "evidence", "tail" : "(): Ev[T]", "member" : "ceedubs.irrec.regex.gen.TypeWith.evidence", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html#evidence:Ev[TypeWith.this.T]", "kind" : "abstract def"}, {"member" : "ceedubs.irrec.regex.gen.TypeWith.T", "error" : "unsupported entity"}], "members_object" : [{"label" : "apply", "tail" : "(ev: Ev[A]): TypeWith[Ev]", "member" : "ceedubs.irrec.regex.gen.TypeWith.apply", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#apply[Ev[_],A](implicitev:Ev[A]):ceedubs.irrec.regex.gen.TypeWith[Ev]", "kind" : "def"}, {"label" : "Aux", "tail" : "", "member" : "ceedubs.irrec.regex.gen.TypeWith.Aux", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#Aux[Ev[_],A]=ceedubs.irrec.regex.gen.TypeWith[Ev]{typeT=A}", "kind" : "type"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/gen\/TypeWith$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ceedubs\/irrec\/regex\/gen\/TypeWith.html", "kind" : "class"}], "ceedubs.irrec.regex" : [{"name" : "ceedubs.irrec.regex.char", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/char$.html", "members_object" : [{"label" : "matchedS", "tail" : "(r: RegexC[Out]): RegexC[String]", "member" : "ceedubs.irrec.regex.char.matchedS", "link" : "ceedubs\/irrec\/regex\/char$.html#matchedS[Out](r:ceedubs.irrec.regex.RegexC[Out]):ceedubs.irrec.regex.RegexC[String]", "kind" : "def"}, {"label" : "withMatchedS", "tail" : "(r: RegexC[Out]): RegexC[(String, Out)]", "member" : "ceedubs.irrec.regex.char.withMatchedS", "link" : "ceedubs\/irrec\/regex\/char$.html#withMatchedS[Out](r:ceedubs.irrec.regex.RegexC[Out]):ceedubs.irrec.regex.RegexC[(String,Out)]", "kind" : "def"}, {"label" : "nonPunctuationChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.nonPunctuationChar", "link" : "ceedubs\/irrec\/regex\/char$.html#nonPunctuationChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "punctuationChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.punctuationChar", "link" : "ceedubs\/irrec\/regex\/char$.html#punctuationChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "nonPrintableChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.nonPrintableChar", "link" : "ceedubs\/irrec\/regex\/char$.html#nonPrintableChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "printableChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.printableChar", "link" : "ceedubs\/irrec\/regex\/char$.html#printableChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "nonGraphChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.nonGraphChar", "link" : "ceedubs\/irrec\/regex\/char$.html#nonGraphChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "graphChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.graphChar", "link" : "ceedubs\/irrec\/regex\/char$.html#graphChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "nonControlChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.nonControlChar", "link" : "ceedubs\/irrec\/regex\/char$.html#nonControlChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "controlChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.controlChar", "link" : "ceedubs\/irrec\/regex\/char$.html#controlChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "nonAsciiChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.nonAsciiChar", "link" : "ceedubs\/irrec\/regex\/char$.html#nonAsciiChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "asciiChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.asciiChar", "link" : "ceedubs\/irrec\/regex\/char$.html#asciiChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "nonWhitespaceChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.nonWhitespaceChar", "link" : "ceedubs\/irrec\/regex\/char$.html#nonWhitespaceChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "whitespaceChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.whitespaceChar", "link" : "ceedubs\/irrec\/regex\/char$.html#whitespaceChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "nonHorizontalWhitespaceChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.nonHorizontalWhitespaceChar", "link" : "ceedubs\/irrec\/regex\/char$.html#nonHorizontalWhitespaceChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "horizontalWhitespaceChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.horizontalWhitespaceChar", "link" : "ceedubs\/irrec\/regex\/char$.html#horizontalWhitespaceChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "nonWordChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.nonWordChar", "link" : "ceedubs\/irrec\/regex\/char$.html#nonWordChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "wordChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.wordChar", "link" : "ceedubs\/irrec\/regex\/char$.html#wordChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "nonHexDigitChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.nonHexDigitChar", "link" : "ceedubs\/irrec\/regex\/char$.html#nonHexDigitChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "hexDigitChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.hexDigitChar", "link" : "ceedubs\/irrec\/regex\/char$.html#hexDigitChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "nonAlphaNumericChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.nonAlphaNumericChar", "link" : "ceedubs\/irrec\/regex\/char$.html#nonAlphaNumericChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "alphaNumericChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.alphaNumericChar", "link" : "ceedubs\/irrec\/regex\/char$.html#alphaNumericChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "nonAlphaChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.nonAlphaChar", "link" : "ceedubs\/irrec\/regex\/char$.html#nonAlphaChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "alphaChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.alphaChar", "link" : "ceedubs\/irrec\/regex\/char$.html#alphaChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "nonUpperAlphaChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.nonUpperAlphaChar", "link" : "ceedubs\/irrec\/regex\/char$.html#nonUpperAlphaChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "upperAlphaChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.upperAlphaChar", "link" : "ceedubs\/irrec\/regex\/char$.html#upperAlphaChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "nonLowerAlphaChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.nonLowerAlphaChar", "link" : "ceedubs\/irrec\/regex\/char$.html#nonLowerAlphaChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "lowerAlphaChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.lowerAlphaChar", "link" : "ceedubs\/irrec\/regex\/char$.html#lowerAlphaChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "nonDigit", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.nonDigit", "link" : "ceedubs\/irrec\/regex\/char$.html#nonDigit:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "digit", "tail" : ": RegexC[Int]", "member" : "ceedubs.irrec.regex.char.digit", "link" : "ceedubs\/irrec\/regex\/char$.html#digit:ceedubs.irrec.regex.RegexC[Int]", "kind" : "val"}, {"label" : "digitChar", "tail" : ": RegexC[Char]", "member" : "ceedubs.irrec.regex.char.digitChar", "link" : "ceedubs\/irrec\/regex\/char$.html#digitChar:ceedubs.irrec.regex.RegexC[Char]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/char$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/char$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/char$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/char$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/char$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/char$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/char$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/char$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/char$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/char$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/char$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/char$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/char$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/char$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/char$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/char$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/char$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/char$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/char$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.CharacterClasses", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/CharacterClasses$.html", "members_object" : [{"label" : "punctuationChar", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.punctuationChar", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#punctuationChar:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "printableChar", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.printableChar", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#printableChar:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "graphChar", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.graphChar", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#graphChar:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "controlChar", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.controlChar", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#controlChar:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "whitespaceChar", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.whitespaceChar", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#whitespaceChar:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "horizontalWhitespaceChar", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.horizontalWhitespaceChar", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#horizontalWhitespaceChar:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "wordChar", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.wordChar", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#wordChar:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "ascii", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.ascii", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#ascii:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "hexDigit", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.hexDigit", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#hexDigit:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "alphaNumeric", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.alphaNumeric", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#alphaNumeric:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "alpha", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.alpha", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#alpha:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "upperAlpha", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.upperAlpha", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#upperAlpha:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "lowerAlpha", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.lowerAlpha", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#lowerAlpha:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "digit", "tail" : ": Diet[Char]", "member" : "ceedubs.irrec.regex.CharacterClasses.digit", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#digit:cats.collections.Diet[Char]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/CharacterClasses$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.combinator", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/combinator$.html", "members_object" : [{"label" : "andThen", "tail" : "(rOut: Regex[In, M, (Out1) => Out2], rIn: Regex[In, M, Out1]): Regex[In, M, Out2]", "member" : "ceedubs.irrec.regex.combinator.andThen", "link" : "ceedubs\/irrec\/regex\/combinator$.html#andThen[In,M,Out1,Out2](rOut:ceedubs.irrec.regex.Regex[In,M,Out1=>Out2],rIn:ceedubs.irrec.regex.Regex[In,M,Out1]):ceedubs.irrec.regex.Regex[In,M,Out2]", "kind" : "def"}, {"label" : "matched", "tail" : "(r: Regex[In, M, Out]): Regex[In, M, Chain[In]]", "member" : "ceedubs.irrec.regex.combinator.matched", "link" : "ceedubs\/irrec\/regex\/combinator$.html#matched[In,M,Out](r:ceedubs.irrec.regex.Regex[In,M,Out]):ceedubs.irrec.regex.Regex[In,M,cats.data.Chain[In]]", "kind" : "def"}, {"label" : "withMatched", "tail" : "(r: Regex[In, M, Out]): Regex[In, M, (Chain[In], Out)]", "member" : "ceedubs.irrec.regex.combinator.withMatched", "link" : "ceedubs\/irrec\/regex\/combinator$.html#withMatched[In,M,Out](r:ceedubs.irrec.regex.Regex[In,M,Out]):ceedubs.irrec.regex.Regex[In,M,(cats.data.Chain[In],Out)]", "kind" : "def"}, {"label" : "fail", "tail" : "(): Regex[Any, Nothing, A]", "member" : "ceedubs.irrec.regex.combinator.fail", "link" : "ceedubs\/irrec\/regex\/combinator$.html#fail[A]:ceedubs.irrec.regex.Regex[Any,Nothing,A]", "kind" : "def"}, {"label" : "empty", "tail" : "(): Regex[In, M, Unit]", "member" : "ceedubs.irrec.regex.combinator.empty", "link" : "ceedubs\/irrec\/regex\/combinator$.html#empty[In,M]:ceedubs.irrec.regex.Regex[In,M,Unit]", "kind" : "def"}, {"label" : "allOfR", "tail" : "(values: Regex[In, M, Out]*): Regex[In, M, Chain[Out]]", "member" : "ceedubs.irrec.regex.combinator.allOfR", "link" : "ceedubs\/irrec\/regex\/combinator$.html#allOfR[In,M,Out](values:ceedubs.irrec.regex.Regex[In,M,Out]*):ceedubs.irrec.regex.Regex[In,M,cats.data.Chain[Out]]", "kind" : "def"}, {"label" : "allOfF", "tail" : "(values: F[A])(arg0: Traverse[F], arg1: Order[A]): RegexM[A, F[A]]", "member" : "ceedubs.irrec.regex.combinator.allOfF", "link" : "ceedubs\/irrec\/regex\/combinator$.html#allOfF[F[_],A](values:F[A])(implicitevidence$13:cats.Traverse[F],implicitevidence$14:cats.Order[A]):ceedubs.irrec.regex.RegexM[A,F[A]]", "kind" : "def"}, {"label" : "allOf", "tail" : "(values: A*)(arg0: Order[A]): RegexM[A, Chain[A]]", "member" : "ceedubs.irrec.regex.combinator.allOf", "link" : "ceedubs\/irrec\/regex\/combinator$.html#allOf[A](values:A*)(implicitevidence$12:cats.Order[A]):ceedubs.irrec.regex.RegexM[A,cats.data.Chain[A]]", "kind" : "def"}, {"label" : "seq", "tail" : "(values: Seq[A])(arg0: Order[A]): RegexM[A, Chain[A]]", "member" : "ceedubs.irrec.regex.combinator.seq", "link" : "ceedubs\/irrec\/regex\/combinator$.html#seq[A](values:Seq[A])(implicitevidence$11:cats.Order[A]):ceedubs.irrec.regex.RegexM[A,cats.data.Chain[A]]", "kind" : "def"}, {"label" : "allOfFR", "tail" : "(values: F[Regex[In, M, Out]])(traverseF: Traverse[F]): Regex[In, M, F[Out]]", "member" : "ceedubs.irrec.regex.combinator.allOfFR", "link" : "ceedubs\/irrec\/regex\/combinator$.html#allOfFR[F[_],In,M,Out](values:F[ceedubs.irrec.regex.Regex[In,M,Out]])(implicittraverseF:cats.Traverse[F]):ceedubs.irrec.regex.Regex[In,M,F[Out]]", "kind" : "def"}, {"label" : "noneOf", "tail" : "(a1: A, as: A*)(discreteA: Discrete[A], orderA: Order[A]): RegexM[A, A]", "member" : "ceedubs.irrec.regex.combinator.noneOf", "link" : "ceedubs\/irrec\/regex\/combinator$.html#noneOf[A](a1:A,as:A*)(implicitdiscreteA:cats.collections.Discrete[A],implicitorderA:cats.Order[A]):ceedubs.irrec.regex.RegexM[A,A]", "kind" : "def"}, {"label" : "oneOfFR", "tail" : "(values: F[Regex[In, M, Out]])(reducibleF: Reducible[F]): Regex[In, M, Out]", "member" : "ceedubs.irrec.regex.combinator.oneOfFR", "link" : "ceedubs\/irrec\/regex\/combinator$.html#oneOfFR[F[_],In,M,Out](values:F[ceedubs.irrec.regex.Regex[In,M,Out]])(implicitreducibleF:cats.Reducible[F]):ceedubs.irrec.regex.Regex[In,M,Out]", "kind" : "def"}, {"label" : "oneOfF", "tail" : "(values: F[A])(arg0: Order[A], reducibleF: Reducible[F]): RegexM[A, A]", "member" : "ceedubs.irrec.regex.combinator.oneOfF", "link" : "ceedubs\/irrec\/regex\/combinator$.html#oneOfF[F[_],A](values:F[A])(implicitevidence$10:cats.Order[A],implicitreducibleF:cats.Reducible[F]):ceedubs.irrec.regex.RegexM[A,A]", "kind" : "def"}, {"label" : "oneOfR", "tail" : "(r1: Regex[In, M, Out], rs: Regex[In, M, Out]*): Regex[In, M, Out]", "member" : "ceedubs.irrec.regex.combinator.oneOfR", "link" : "ceedubs\/irrec\/regex\/combinator$.html#oneOfR[In,M,Out](r1:ceedubs.irrec.regex.Regex[In,M,Out],rs:ceedubs.irrec.regex.Regex[In,M,Out]*):ceedubs.irrec.regex.Regex[In,M,Out]", "kind" : "def"}, {"label" : "oneOf", "tail" : "(a1: A, as: A*)(arg0: Order[A]): RegexM[A, A]", "member" : "ceedubs.irrec.regex.combinator.oneOf", "link" : "ceedubs\/irrec\/regex\/combinator$.html#oneOf[A](a1:A,as:A*)(implicitevidence$9:cats.Order[A]):ceedubs.irrec.regex.RegexM[A,A]", "kind" : "def"}, {"label" : "notInSet", "tail" : "(forbidden: Diet[A])(arg0: Order[A]): RegexM[A, A]", "member" : "ceedubs.irrec.regex.combinator.notInSet", "link" : "ceedubs\/irrec\/regex\/combinator$.html#notInSet[A](forbidden:cats.collections.Diet[A])(implicitevidence$8:cats.Order[A]):ceedubs.irrec.regex.RegexM[A,A]", "kind" : "def"}, {"label" : "inSet", "tail" : "(allowed: Diet[A])(arg0: Order[A]): RegexM[A, A]", "member" : "ceedubs.irrec.regex.combinator.inSet", "link" : "ceedubs\/irrec\/regex\/combinator$.html#inSet[A](allowed:cats.collections.Diet[A])(implicitevidence$7:cats.Order[A]):ceedubs.irrec.regex.RegexM[A,A]", "kind" : "def"}, {"label" : "map", "tail" : "(r: Regex[In, M, Out])(f: (Out) => Out2): Regex[In, M, Out2]", "member" : "ceedubs.irrec.regex.combinator.map", "link" : "ceedubs\/irrec\/regex\/combinator$.html#map[In,M,Out,Out2](r:ceedubs.irrec.regex.Regex[In,M,Out])(f:Out=>Out2):ceedubs.irrec.regex.Regex[In,M,Out2]", "kind" : "def"}, {"label" : "oneOrMore", "tail" : "(r: Regex[In, M, Out], greediness: Greediness): Regex[In, M, NonEmptyChain[Out]]", "member" : "ceedubs.irrec.regex.combinator.oneOrMore", "link" : "ceedubs\/irrec\/regex\/combinator$.html#oneOrMore[In,M,Out](r:ceedubs.irrec.regex.Regex[In,M,Out],greediness:ceedubs.irrec.regex.Greediness):ceedubs.irrec.regex.Regex[In,M,cats.data.NonEmptyChain[Out]]", "kind" : "def"}, {"label" : "repeat", "tail" : "(r: Regex[In, M, Out], minInclusive: Int, maxInclusive: Option[Int], greediness: Greediness): Regex[In, M, Chain[Out]]", "member" : "ceedubs.irrec.regex.combinator.repeat", "link" : "ceedubs\/irrec\/regex\/combinator$.html#repeat[In,M,Out](r:ceedubs.irrec.regex.Regex[In,M,Out],minInclusive:Int,maxInclusive:Option[Int],greediness:ceedubs.irrec.regex.Greediness):ceedubs.irrec.regex.Regex[In,M,cats.data.Chain[Out]]", "kind" : "def"}, {"label" : "count", "tail" : "(n: Int, r: Regex[In, M, Out]): Regex[In, M, Chain[Out]]", "member" : "ceedubs.irrec.regex.combinator.count", "link" : "ceedubs\/irrec\/regex\/combinator$.html#count[In,M,Out](n:Int,r:ceedubs.irrec.regex.Regex[In,M,Out]):ceedubs.irrec.regex.Regex[In,M,cats.data.Chain[Out]]", "kind" : "def"}, {"label" : "few", "tail" : "(r: Regex[In, M, Out]): Regex[In, M, Chain[Out]]", "member" : "ceedubs.irrec.regex.combinator.few", "link" : "ceedubs\/irrec\/regex\/combinator$.html#few[In,M,Out](r:ceedubs.irrec.regex.Regex[In,M,Out]):ceedubs.irrec.regex.Regex[In,M,cats.data.Chain[Out]]", "kind" : "def"}, {"label" : "many", "tail" : "(r: Regex[In, M, Out]): Regex[In, M, Chain[Out]]", "member" : "ceedubs.irrec.regex.combinator.many", "link" : "ceedubs\/irrec\/regex\/combinator$.html#many[In,M,Out](r:ceedubs.irrec.regex.Regex[In,M,Out]):ceedubs.irrec.regex.Regex[In,M,cats.data.Chain[Out]]", "kind" : "def"}, {"label" : "star", "tail" : "(r: Regex[In, M, Out], g: Greediness): Regex[In, M, Chain[Out]]", "member" : "ceedubs.irrec.regex.combinator.star", "link" : "ceedubs\/irrec\/regex\/combinator$.html#star[In,M,Out](r:ceedubs.irrec.regex.Regex[In,M,Out],g:ceedubs.irrec.regex.Greediness):ceedubs.irrec.regex.Regex[In,M,cats.data.Chain[Out]]", "kind" : "def"}, {"label" : "starFold", "tail" : "(r: Regex[In, M, Out1], g: Greediness, z: Out2)(fold: (Out2, Out1) => Out2): Regex[In, M, Out2]", "member" : "ceedubs.irrec.regex.combinator.starFold", "link" : "ceedubs\/irrec\/regex\/combinator$.html#starFold[In,M,Out1,Out2](r:ceedubs.irrec.regex.Regex[In,M,Out1],g:ceedubs.irrec.regex.Greediness,z:Out2)(fold:(Out2,Out1)=>Out2):ceedubs.irrec.regex.Regex[In,M,Out2]", "kind" : "def"}, {"label" : "either", "tail" : "(l: Regex[In, M, Out1], r: Regex[In, M, Out2]): Regex[In, M, Either[Out1, Out2]]", "member" : "ceedubs.irrec.regex.combinator.either", "link" : "ceedubs\/irrec\/regex\/combinator$.html#either[In,M,Out1,Out2](l:ceedubs.irrec.regex.Regex[In,M,Out1],r:ceedubs.irrec.regex.Regex[In,M,Out2]):ceedubs.irrec.regex.Regex[In,M,Either[Out1,Out2]]", "kind" : "def"}, {"label" : "optional", "tail" : "(r: Regex[In, M, Out], greediness: Greediness): Regex[In, M, Option[Out]]", "member" : "ceedubs.irrec.regex.combinator.optional", "link" : "ceedubs\/irrec\/regex\/combinator$.html#optional[In,M,Out](r:ceedubs.irrec.regex.Regex[In,M,Out],greediness:ceedubs.irrec.regex.Greediness):ceedubs.irrec.regex.Regex[In,M,Option[Out]]", "kind" : "def"}, {"label" : "quantifyFold", "tail" : "(r: Regex[In, M, Out1], q: Quantifier, z: Out2)(fold: (Out2, Out1) => Out2): Regex[In, M, Out2]", "member" : "ceedubs.irrec.regex.combinator.quantifyFold", "link" : "ceedubs\/irrec\/regex\/combinator$.html#quantifyFold[In,M,Out1,Out2](r:ceedubs.irrec.regex.Regex[In,M,Out1],q:ceedubs.irrec.regex.Quantifier,z:Out2)(fold:(Out2,Out1)=>Out2):ceedubs.irrec.regex.Regex[In,M,Out2]", "kind" : "def"}, {"label" : "or", "tail" : "(l: Regex[In, M, Out], r: Regex[In, M, Out]): Regex[In, M, Out]", "member" : "ceedubs.irrec.regex.combinator.or", "link" : "ceedubs\/irrec\/regex\/combinator$.html#or[In,M,Out](l:ceedubs.irrec.regex.Regex[In,M,Out],r:ceedubs.irrec.regex.Regex[In,M,Out]):ceedubs.irrec.regex.Regex[In,M,Out]", "kind" : "def"}, {"label" : "wildcard", "tail" : "(arg0: Order[A]): RegexM[A, A]", "member" : "ceedubs.irrec.regex.combinator.wildcard", "link" : "ceedubs\/irrec\/regex\/combinator$.html#wildcard[A](implicitevidence$6:cats.Order[A]):ceedubs.irrec.regex.RegexM[A,A]", "kind" : "def"}, {"label" : "range", "tail" : "(l: A, r: A)(arg0: Order[A]): RegexM[A, A]", "member" : "ceedubs.irrec.regex.combinator.range", "link" : "ceedubs\/irrec\/regex\/combinator$.html#range[A](l:A,r:A)(implicitevidence$5:cats.Order[A]):ceedubs.irrec.regex.RegexM[A,A]", "kind" : "def"}, {"label" : "literal", "tail" : "(value: A)(arg0: Order[A]): RegexM[A, A]", "member" : "ceedubs.irrec.regex.combinator.literal", "link" : "ceedubs\/irrec\/regex\/combinator$.html#literal[A](value:A)(implicitevidence$4:cats.Order[A]):ceedubs.irrec.regex.RegexM[A,A]", "kind" : "def"}, {"label" : "lit", "tail" : "(value: A)(arg0: Order[A]): RegexM[A, A]", "member" : "ceedubs.irrec.regex.combinator.lit", "link" : "ceedubs\/irrec\/regex\/combinator$.html#lit[A](value:A)(implicitevidence$3:cats.Order[A]):ceedubs.irrec.regex.RegexM[A,A]", "kind" : "def"}, {"label" : "mapMatch", "tail" : "(m: Match[In], f: (In) => Out)(arg0: Order[In]): RegexM[In, Out]", "member" : "ceedubs.irrec.regex.combinator.mapMatch", "link" : "ceedubs\/irrec\/regex\/combinator$.html#mapMatch[In,Out](m:ceedubs.irrec.regex.Match[In],f:In=>Out)(implicitevidence$2:cats.Order[In]):ceedubs.irrec.regex.RegexM[In,Out]", "kind" : "def"}, {"label" : "matching", "tail" : "(m: Match[A])(arg0: Order[A]): RegexM[A, A]", "member" : "ceedubs.irrec.regex.combinator.matching", "link" : "ceedubs\/irrec\/regex\/combinator$.html#matching[A](m:ceedubs.irrec.regex.Match[A])(implicitevidence$1:cats.Order[A]):ceedubs.irrec.regex.RegexM[A,A]", "kind" : "def"}, {"label" : "pred", "tail" : "(f: (In) => Boolean, metadata: M): Regex[In, M, In]", "member" : "ceedubs.irrec.regex.combinator.pred", "link" : "ceedubs\/irrec\/regex\/combinator$.html#pred[In,M,Out](f:In=>Boolean,metadata:M):ceedubs.irrec.regex.Regex[In,M,In]", "kind" : "def"}, {"label" : "elem", "tail" : "(f: (In) => Option[Out], metadata: M): Regex[In, M, Out]", "member" : "ceedubs.irrec.regex.combinator.elem", "link" : "ceedubs\/irrec\/regex\/combinator$.html#elem[In,M,Out](f:In=>Option[Out],metadata:M):ceedubs.irrec.regex.Regex[In,M,Out]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/combinator$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/combinator$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/combinator$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/combinator$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/combinator$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/combinator$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/combinator$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/combinator$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/combinator$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/combinator$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/combinator$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/combinator$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/combinator$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/combinator$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/combinator$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/combinator$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/combinator$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/combinator$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/combinator$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.Cont", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/Cont$.html", "members_class" : [{"label" : "map", "tail" : "(f: (A) => B): Cont[B]", "member" : "ceedubs.irrec.regex.Cont.map", "link" : "ceedubs\/irrec\/regex\/Cont.html#map[B](f:A=>B):ceedubs.irrec.regex.Cont[B]", "kind" : "def"}, {"label" : "nonEmpty", "tail" : "(): A", "member" : "ceedubs.irrec.regex.Cont.nonEmpty", "link" : "ceedubs\/irrec\/regex\/Cont.html#nonEmpty:A", "kind" : "def"}, {"label" : "empty", "tail" : "(): A", "member" : "ceedubs.irrec.regex.Cont.empty", "link" : "ceedubs\/irrec\/regex\/Cont.html#empty:A", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ceedubs\/irrec\/regex\/Cont.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "ceedubs\/irrec\/regex\/Cont.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "ceedubs\/irrec\/regex\/Cont.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "ceedubs\/irrec\/regex\/Cont.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/Cont.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/Cont.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/Cont.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/Cont.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/Cont.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/Cont.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/Cont.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Cont.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Cont.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Cont.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/Cont.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/Cont.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/Cont.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/Cont.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/Cont.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/Cont.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/Cont.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/Cont.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/Cont.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "ceedubs\/irrec\/regex\/Cont.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "ceedubs\/irrec\/regex\/Cont.html#productArity:Int", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "ceedubs\/irrec\/regex\/Cont.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "Choice", "tail" : "", "member" : "ceedubs.irrec.regex.Cont.Choice", "link" : "ceedubs\/irrec\/regex\/Cont$.html#Choice[+A]extendsCont[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Single", "tail" : "", "member" : "ceedubs.irrec.regex.Cont.Single", "link" : "ceedubs\/irrec\/regex\/Cont$.html#Single[+A]extendsCont[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/Cont$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/Cont$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/Cont$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/Cont$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/Cont$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/Cont$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/Cont$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Cont$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Cont$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Cont$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/Cont$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/Cont$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/Cont$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/Cont$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/Cont$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/Cont$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/Cont$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/Cont$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/Cont$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ceedubs\/irrec\/regex\/Cont.html", "kind" : "class"}, {"name" : "ceedubs.irrec.regex.Greediness", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/Greediness$.html", "members_class" : [{"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ceedubs\/irrec\/regex\/Greediness.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "ceedubs\/irrec\/regex\/Greediness.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "ceedubs\/irrec\/regex\/Greediness.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "ceedubs\/irrec\/regex\/Greediness.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/Greediness.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/Greediness.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/Greediness.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/Greediness.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/Greediness.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/Greediness.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/Greediness.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Greediness.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Greediness.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Greediness.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/Greediness.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/Greediness.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/Greediness.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/Greediness.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/Greediness.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/Greediness.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/Greediness.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/Greediness.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/Greediness.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "ceedubs\/irrec\/regex\/Greediness.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "ceedubs\/irrec\/regex\/Greediness.html#productArity:Int", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "ceedubs\/irrec\/regex\/Greediness.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "NonGreedy", "tail" : "", "member" : "ceedubs.irrec.regex.Greediness.NonGreedy", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#NonGreedy", "kind" : "case object"}, {"label" : "Greedy", "tail" : "", "member" : "ceedubs.irrec.regex.Greediness.Greedy", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#Greedy", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/Greediness$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/Greediness$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ceedubs\/irrec\/regex\/Greediness.html", "kind" : "class"}, {"name" : "ceedubs.irrec.regex.Match", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/Match$.html", "members_class" : [{"label" : "matches", "tail" : "(a: A)(orderA: Order[A]): Boolean", "member" : "ceedubs.irrec.regex.Match.matches", "link" : "ceedubs\/irrec\/regex\/Match.html#matches(a:A)(implicitorderA:cats.Order[A]):Boolean", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ceedubs\/irrec\/regex\/Match.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "ceedubs\/irrec\/regex\/Match.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "ceedubs\/irrec\/regex\/Match.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "ceedubs\/irrec\/regex\/Match.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/Match.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/Match.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/Match.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/Match.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/Match.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/Match.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/Match.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Match.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Match.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Match.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/Match.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/Match.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/Match.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/Match.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/Match.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/Match.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/Match.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/Match.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/Match.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "ceedubs\/irrec\/regex\/Match.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "ceedubs\/irrec\/regex\/Match.html#productArity:Int", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "ceedubs\/irrec\/regex\/Match.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "wildcard", "tail" : "(): Match[A]", "member" : "ceedubs.irrec.regex.Match.wildcard", "link" : "ceedubs\/irrec\/regex\/Match$.html#wildcard[A]:ceedubs.irrec.regex.Match[A]", "kind" : "def"}, {"label" : "lit", "tail" : "(a: A): Match[A]", "member" : "ceedubs.irrec.regex.Match.lit", "link" : "ceedubs\/irrec\/regex\/Match$.html#lit[A](a:A):ceedubs.irrec.regex.Match[A]", "kind" : "def"}, {"label" : "Wildcard", "tail" : "", "member" : "ceedubs.irrec.regex.Match.Wildcard", "link" : "ceedubs\/irrec\/regex\/Match$.html#Wildcard[A]extendsMatch[A]withProductwithSerializable", "kind" : "sealed case class"}, {"label" : "MatchSet", "tail" : "", "member" : "ceedubs.irrec.regex.Match.MatchSet", "link" : "ceedubs\/irrec\/regex\/Match$.html#MatchSet", "kind" : "object"}, {"label" : "MatchSet", "tail" : "", "member" : "ceedubs.irrec.regex.Match.MatchSet", "link" : "ceedubs\/irrec\/regex\/Match$.html#MatchSet[A]extendsMatch[A]", "kind" : "sealed abstract class"}, {"label" : "Literal", "tail" : "", "member" : "ceedubs.irrec.regex.Match.Literal", "link" : "ceedubs\/irrec\/regex\/Match$.html#Literal[A]extendsMatch[A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/Match$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/Match$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/Match$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/Match$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/Match$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/Match$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/Match$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Match$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Match$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Match$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/Match$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/Match$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/Match$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/Match$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/Match$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/Match$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/Match$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/Match$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/Match$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ceedubs\/irrec\/regex\/Match.html", "kind" : "class"}, {"name" : "ceedubs.irrec.regex.ParseState", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/ParseState$.html", "members_object" : [{"label" : "fromThreads", "tail" : "(threads: F[Thread[In, A]])(foldableF: Foldable[F]): ParseState[In, A]", "member" : "ceedubs.irrec.regex.ParseState.fromThreads", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#fromThreads[F[_],In,A](threads:F[ceedubs.irrec.regex.Thread[In,A]])(implicitfoldableF:cats.Foldable[F]):ceedubs.irrec.regex.ParseState[In,A]", "kind" : "def"}, {"label" : "empty", "tail" : "(): ParseState[In, A]", "member" : "ceedubs.irrec.regex.ParseState.empty", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#empty[In,A]:ceedubs.irrec.regex.ParseState[In,A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/ParseState$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/ParseState$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "parseOnlyS", "tail" : "(input: String)(ev: Is[Char, In]): Option[A]", "member" : "ceedubs.irrec.regex.ParseState.parseOnlyS", "link" : "ceedubs\/irrec\/regex\/ParseState.html#parseOnlyS(input:String)(implicitev:cats.evidence.Is[Char,In]):Option[A]", "kind" : "def"}, {"label" : "parseOnly", "tail" : "(input: F[In])(foldableF: Foldable[F]): Option[A]", "member" : "ceedubs.irrec.regex.ParseState.parseOnly", "link" : "ceedubs\/irrec\/regex\/ParseState.html#parseOnly[F[_]](input:F[In])(implicitfoldableF:cats.Foldable[F]):Option[A]", "kind" : "def"}, {"label" : "results", "tail" : "(): List[A]", "member" : "ceedubs.irrec.regex.ParseState.results", "link" : "ceedubs\/irrec\/regex\/ParseState.html#results:List[A]", "kind" : "def"}, {"label" : "step", "tail" : "(x: In): ParseState[In, A]", "member" : "ceedubs.irrec.regex.ParseState.step", "link" : "ceedubs\/irrec\/regex\/ParseState.html#step(x:In):ceedubs.irrec.regex.ParseState[In,A]", "kind" : "def"}, {"member" : "ceedubs.irrec.regex.ParseState#<init>", "error" : "unsupported entity"}, {"label" : "queue", "tail" : ": StateQueue[Thread[In, A]]", "member" : "ceedubs.irrec.regex.ParseState.queue", "link" : "ceedubs\/irrec\/regex\/ParseState.html#queue:ceedubs.irrec.regex.StateQueue[ceedubs.irrec.regex.Thread[In,A]]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ceedubs\/irrec\/regex\/ParseState.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ceedubs\/irrec\/regex\/ParseState.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ceedubs\/irrec\/regex\/ParseState.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/ParseState.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/ParseState.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ceedubs\/irrec\/regex\/ParseState.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ceedubs\/irrec\/regex\/ParseState.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "ceedubs\/irrec\/regex\/ParseState.html", "kind" : "case class"}, {"name" : "ceedubs.irrec.regex.Quantifier", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/Quantifier$.html", "members_class" : [{"label" : "pprint", "tail" : "(): String", "member" : "ceedubs.irrec.regex.Quantifier.pprint", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#pprint:String", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/Quantifier.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#productArity:Int", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "ceedubs\/irrec\/regex\/Quantifier.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "pprintGreediness", "tail" : "(greediness: Greediness): String", "member" : "ceedubs.irrec.regex.Quantifier.pprintGreediness", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#pprintGreediness(greediness:ceedubs.irrec.regex.Greediness):String", "kind" : "def"}, {"label" : "Optional", "tail" : "", "member" : "ceedubs.irrec.regex.Quantifier.Optional", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#OptionalextendsQuantifierwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Range", "tail" : "", "member" : "ceedubs.irrec.regex.Quantifier.Range", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#RangeextendsQuantifierwithProductwithSerializable", "kind" : "final case class"}, {"label" : "Exact", "tail" : "", "member" : "ceedubs.irrec.regex.Quantifier.Exact", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#ExactextendsQuantifierwithProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/Quantifier$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ceedubs\/irrec\/regex\/Quantifier.html", "kind" : "class"}, {"name" : "ceedubs.irrec.regex.Regex", "shortDescription" : "A generalized representation of a regular expression.", "object" : "ceedubs\/irrec\/regex\/Regex$.html", "members_class" : [{"label" : "map", "tail" : "(f: (Out) => Out2): Regex[In, M, Out2]", "member" : "ceedubs.irrec.regex.Regex.map", "link" : "ceedubs\/irrec\/regex\/Regex.html#map[Out2](f:Out=>Out2):ceedubs.irrec.regex.Regex[In,M,Out2]", "kind" : "def"}, {"label" : "repeat", "tail" : "(minInclusive: Int, maxInclusive: Option[Int], greediness: Greediness): Regex[In, M, Chain[Out]]", "member" : "ceedubs.irrec.regex.Regex.repeat", "link" : "ceedubs\/irrec\/regex\/Regex.html#repeat(minInclusive:Int,maxInclusive:Option[Int],greediness:ceedubs.irrec.regex.Greediness):ceedubs.irrec.regex.Regex[In,M,cats.data.Chain[Out]]", "kind" : "def"}, {"label" : "count", "tail" : "(n: Int): Regex[In, M, Chain[Out]]", "member" : "ceedubs.irrec.regex.Regex.count", "link" : "ceedubs\/irrec\/regex\/Regex.html#count(n:Int):ceedubs.irrec.regex.Regex[In,M,cats.data.Chain[Out]]", "kind" : "def"}, {"label" : "oneOrMore", "tail" : "(greediness: Greediness): Regex[In, M, NonEmptyChain[Out]]", "member" : "ceedubs.irrec.regex.Regex.oneOrMore", "link" : "ceedubs\/irrec\/regex\/Regex.html#oneOrMore(greediness:ceedubs.irrec.regex.Greediness):ceedubs.irrec.regex.Regex[In,M,cats.data.NonEmptyChain[Out]]", "kind" : "def"}, {"label" : "??", "tail" : "(): Regex[In, M, Option[Out]]", "member" : "ceedubs.irrec.regex.Regex.??", "link" : "ceedubs\/irrec\/regex\/Regex.html#??:ceedubs.irrec.regex.Regex[In,M,Option[Out]]", "kind" : "def"}, {"label" : "?", "tail" : "(): Regex[In, M, Option[Out]]", "member" : "ceedubs.irrec.regex.Regex.?", "link" : "ceedubs\/irrec\/regex\/Regex.html#?:ceedubs.irrec.regex.Regex[In,M,Option[Out]]", "kind" : "def"}, {"label" : "optional", "tail" : "(greediness: Greediness): Regex[In, M, Option[Out]]", "member" : "ceedubs.irrec.regex.Regex.optional", "link" : "ceedubs\/irrec\/regex\/Regex.html#optional(greediness:ceedubs.irrec.regex.Greediness):ceedubs.irrec.regex.Regex[In,M,Option[Out]]", "kind" : "def"}, {"label" : "*?", "tail" : "(): Regex[In, M, Chain[Out]]", "member" : "ceedubs.irrec.regex.Regex.*?", "link" : "ceedubs\/irrec\/regex\/Regex.html#*?:ceedubs.irrec.regex.Regex[In,M,cats.data.Chain[Out]]", "kind" : "def"}, {"label" : "*", "tail" : "(): Regex[In, M, Chain[Out]]", "member" : "ceedubs.irrec.regex.Regex.*", "link" : "ceedubs\/irrec\/regex\/Regex.html#*:ceedubs.irrec.regex.Regex[In,M,cats.data.Chain[Out]]", "kind" : "def"}, {"label" : "quantifyFold", "tail" : "(q: Quantifier, z: Out2)(fold: (Out2, Out) => Out2): Regex[In, M, Out2]", "member" : "ceedubs.irrec.regex.Regex.quantifyFold", "link" : "ceedubs\/irrec\/regex\/Regex.html#quantifyFold[Out2](q:ceedubs.irrec.regex.Quantifier,z:Out2)(fold:(Out2,Out)=>Out2):ceedubs.irrec.regex.Regex[In,M,Out2]", "kind" : "def"}, {"label" : "starFold", "tail" : "(g: Greediness, z: Out2)(fold: (Out2, Out) => Out2): Regex[In, M, Out2]", "member" : "ceedubs.irrec.regex.Regex.starFold", "link" : "ceedubs\/irrec\/regex\/Regex.html#starFold[Out2](g:ceedubs.irrec.regex.Greediness,z:Out2)(fold:(Out2,Out)=>Out2):ceedubs.irrec.regex.Regex[In,M,Out2]", "kind" : "def"}, {"label" : "star", "tail" : "(greediness: Greediness): Regex[In, M, Chain[Out]]", "member" : "ceedubs.irrec.regex.Regex.star", "link" : "ceedubs\/irrec\/regex\/Regex.html#star(greediness:ceedubs.irrec.regex.Greediness):ceedubs.irrec.regex.Regex[In,M,cats.data.Chain[Out]]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/Regex.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/Regex.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/Regex.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/Regex.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/Regex.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/Regex.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/Regex.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Regex.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Regex.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Regex.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/Regex.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/Regex.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/Regex.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/Regex.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/Regex.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/Regex.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/Regex.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/Regex.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/Regex.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_object" : [{"label" : "toRegexOps", "tail" : "(r: Regex[In, M, Out]): RegexOps[In, M, Out]", "member" : "ceedubs.irrec.regex.Regex.toRegexOps", "link" : "ceedubs\/irrec\/regex\/Regex$.html#toRegexOps[In,M,Out](r:ceedubs.irrec.regex.Regex[In,M,Out]):ceedubs.irrec.regex.RegexOps[In,M,Out]", "kind" : "implicit def"}, {"label" : "toRegexCOps", "tail" : "(r: Regex[Char, Match[Char], Out]): RegexCOps[Out]", "member" : "ceedubs.irrec.regex.Regex.toRegexCOps", "link" : "ceedubs\/irrec\/regex\/Regex$.html#toRegexCOps[Out](r:ceedubs.irrec.regex.Regex[Char,ceedubs.irrec.regex.Match[Char],Out]):ceedubs.irrec.regex.RegexCOps[Out]", "kind" : "implicit def"}, {"label" : "matcher", "tail" : "(r: Regex[In, M, Out])(arg0: Foldable[F]): (F[In]) => Boolean", "member" : "ceedubs.irrec.regex.Regex.matcher", "link" : "ceedubs\/irrec\/regex\/Regex$.html#matcher[F[_],In,M,Out](r:ceedubs.irrec.regex.Regex[In,M,Out])(implicitevidence$1:cats.Foldable[F]):F[In]=>Boolean", "kind" : "def"}, {"label" : "transformRecursive", "tail" : "(f: ~>[[γ$12$]Regex[In, M, γ$12$], [γ$13$]Regex[In, M, γ$13$]]): ~>[[γ$14$]Regex[In, M, γ$14$], [γ$15$]Regex[In, M, γ$15$]]", "member" : "ceedubs.irrec.regex.Regex.transformRecursive", "link" : "ceedubs\/irrec\/regex\/Regex$.html#transformRecursive[In,M](f:[γ$12$]ceedubs.irrec.regex.Regex[In,M,γ$12$]~>[γ$13$]ceedubs.irrec.regex.Regex[In,M,γ$13$]):[γ$14$]ceedubs.irrec.regex.Regex[In,M,γ$14$]~>[γ$15$]ceedubs.irrec.regex.Regex[In,M,γ$15$]", "kind" : "def"}, {"label" : "compile", "tail" : "(r: Regex[In, M, Out]): ParseState[In, Out]", "member" : "ceedubs.irrec.regex.Regex.compile", "link" : "ceedubs\/irrec\/regex\/Regex$.html#compile[In,M,Out](r:ceedubs.irrec.regex.Regex[In,M,Out]):ceedubs.irrec.regex.ParseState[In,Out]", "kind" : "def"}, {"label" : "assignThreadIds", "tail" : "(re: Regex[In, M, A]): Regex[In, (ThreadId, M), A]", "member" : "ceedubs.irrec.regex.Regex.assignThreadIds", "link" : "ceedubs\/irrec\/regex\/Regex$.html#assignThreadIds[In,M,A](re:ceedubs.irrec.regex.Regex[In,M,A]):ceedubs.irrec.regex.Regex[In,(ceedubs.irrec.regex.ThreadId,M),A]", "kind" : "def"}, {"label" : "nonCapturingRegexKleene", "tail" : "(): Rig[Regex[In, M, Unit]]", "member" : "ceedubs.irrec.regex.Regex.nonCapturingRegexKleene", "link" : "ceedubs\/irrec\/regex\/Regex$.html#nonCapturingRegexKleene[In,M]:algebra.ring.Rig[ceedubs.irrec.regex.Regex[In,M,Unit]]", "kind" : "implicit def"}, {"label" : "functorFilterRegex", "tail" : "(): FunctorFilter[[γ$3$]Regex[In, M, γ$3$]]", "member" : "ceedubs.irrec.regex.Regex.functorFilterRegex", "link" : "ceedubs\/irrec\/regex\/Regex$.html#functorFilterRegex[In,M]:cats.FunctorFilter[[γ$3$]ceedubs.irrec.regex.Regex[In,M,γ$3$]]", "kind" : "implicit def"}, {"label" : "alternativeRegex", "tail" : "(): Alternative[[γ$1$]Regex[In, M, γ$1$]]", "member" : "ceedubs.irrec.regex.Regex.alternativeRegex", "link" : "ceedubs\/irrec\/regex\/Regex$.html#alternativeRegex[In,M]:cats.Alternative[[γ$1$]ceedubs.irrec.regex.Regex[In,M,γ$1$]]", "kind" : "implicit def"}, {"label" : "fold", "tail" : "(eps: (Is[Unit, Out]) => R, fail: () => R, elem: (M, (In) => Option[Out]) => R, andThen: ~>[[i](Regex[In, M, (i) => Out], Regex[In, M, i]), [a]R], star: ~>[[i](Regex[In, M, i], Greediness, Out, (Out, i) => Out), [a]R], repeat: ~>[[i](Regex[In, M, i], Quantifier, Out, (Out, i) => Out), [a]R], mapped: ~>[[a](Regex[In, M, a], (a) => Out), [a]R], mapFilter: ~>[[a](Regex[In, M, a], (a) => Option[Out]), [a]R], or: (NonEmptyList[Regex[In, M, Out]]) => R, void: (Is[Unit, Out]) => ~>[[γ$0$]Regex[In, M, γ$0$], [a]R])(r: Regex[In, M, Out]): R", "member" : "ceedubs.irrec.regex.Regex.fold", "link" : "ceedubs\/irrec\/regex\/Regex$.html#fold[In,M,Out,R](eps:cats.evidence.Is[Unit,Out]=>R,fail:()=>R,elem:(M,In=>Option[Out])=>R,andThen:[i](ceedubs.irrec.regex.Regex[In,M,i=>Out],ceedubs.irrec.regex.Regex[In,M,i])~>[a]R,star:[i](ceedubs.irrec.regex.Regex[In,M,i],ceedubs.irrec.regex.Greediness,Out,(Out,i)=>Out)~>[a]R,repeat:[i](ceedubs.irrec.regex.Regex[In,M,i],ceedubs.irrec.regex.Quantifier,Out,(Out,i)=>Out)~>[a]R,mapped:[a](ceedubs.irrec.regex.Regex[In,M,a],a=>Out)~>[a]R,mapFilter:[a](ceedubs.irrec.regex.Regex[In,M,a],a=>Option[Out])~>[a]R,or:cats.data.NonEmptyList[ceedubs.irrec.regex.Regex[In,M,Out]]=>R,void:cats.evidence.Is[Unit,Out]=>[γ$0$]ceedubs.irrec.regex.Regex[In,M,γ$0$]~>[a]R)(r:ceedubs.irrec.regex.Regex[In,M,Out]):R", "kind" : "def"}, {"label" : "traverseM", "tail" : "(re: Regex[In, M, Out])(f: (M) => F[M2])(F: Applicative[F]): F[Regex[In, M2, Out]]", "member" : "ceedubs.irrec.regex.Regex.traverseM", "link" : "ceedubs\/irrec\/regex\/Regex$.html#traverseM[F[_],In,M,M2,Out](re:ceedubs.irrec.regex.Regex[In,M,Out])(f:M=>F[M2])(implicitF:cats.Applicative[F]):F[ceedubs.irrec.regex.Regex[In,M2,Out]]", "kind" : "def"}, {"label" : "Void", "tail" : "", "member" : "ceedubs.irrec.regex.Regex.Void", "link" : "ceedubs\/irrec\/regex\/Regex$.html#Void[-In,+M,I]extendsRegex[In,M,Unit]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Repeat", "tail" : "", "member" : "ceedubs.irrec.regex.Regex.Repeat", "link" : "ceedubs\/irrec\/regex\/Regex$.html#Repeat[-In,+M,I,Out]extendsRegex[In,M,Out]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Star", "tail" : "", "member" : "ceedubs.irrec.regex.Regex.Star", "link" : "ceedubs\/irrec\/regex\/Regex$.html#Star[-In,+M,I,Out]extendsRegex[In,M,Out]withProductwithSerializable", "kind" : "final case class"}, {"label" : "MapFilter", "tail" : "", "member" : "ceedubs.irrec.regex.Regex.MapFilter", "link" : "ceedubs\/irrec\/regex\/Regex$.html#MapFilter[-In,+M,I,Out]extendsRegex[In,M,Out]withProductwithSerializable", "kind" : "final case class"}, {"label" : "FMap", "tail" : "", "member" : "ceedubs.irrec.regex.Regex.FMap", "link" : "ceedubs\/irrec\/regex\/Regex$.html#FMap[-In,+M,I,Out]extendsRegex[In,M,Out]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Or", "tail" : "", "member" : "ceedubs.irrec.regex.Regex.Or", "link" : "ceedubs\/irrec\/regex\/Regex$.html#Or[-In,+M,Out]extendsRegex[In,M,Out]withProductwithSerializable", "kind" : "final case class"}, {"label" : "AndThen", "tail" : "", "member" : "ceedubs.irrec.regex.Regex.AndThen", "link" : "ceedubs\/irrec\/regex\/Regex$.html#AndThen[-In,+M,I,Out]extendsRegex[In,M,Out]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Elem", "tail" : "", "member" : "ceedubs.irrec.regex.Regex.Elem", "link" : "ceedubs\/irrec\/regex\/Regex$.html#Elem", "kind" : "object"}, {"label" : "Elem", "tail" : "", "member" : "ceedubs.irrec.regex.Regex.Elem", "link" : "ceedubs\/irrec\/regex\/Regex$.html#Elem[-In,+M,Out]extendsRegex[In,M,Out]", "kind" : "abstract class"}, {"label" : "Fail", "tail" : "", "member" : "ceedubs.irrec.regex.Regex.Fail", "link" : "ceedubs\/irrec\/regex\/Regex$.html#Fail[A]extendsRegex[Any,Nothing,A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Eps", "tail" : "", "member" : "ceedubs.irrec.regex.Regex.Eps", "link" : "ceedubs\/irrec\/regex\/Regex$.html#Eps", "kind" : "case object"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/Regex$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/Regex$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/Regex$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/Regex$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/Regex$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/Regex$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/Regex$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Regex$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Regex$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Regex$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/Regex$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/Regex$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/Regex$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/Regex$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/Regex$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/Regex$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/Regex$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/Regex$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/Regex$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ceedubs\/irrec\/regex\/Regex.html", "kind" : "class"}, {"name" : "ceedubs.irrec.regex.RegexCOps", "shortDescription" : "", "members_class" : [{"label" : "toPattern", "tail" : "(): Pattern", "member" : "ceedubs.irrec.regex.RegexCOps.toPattern", "link" : "ceedubs\/irrec\/regex\/RegexCOps.html#toPattern:java.util.regex.Pattern", "kind" : "def"}, {"label" : "stringMatcher", "tail" : "(): (String) => Boolean", "member" : "ceedubs.irrec.regex.RegexCOps.stringMatcher", "link" : "ceedubs\/irrec\/regex\/RegexCOps.html#stringMatcher:String=>Boolean", "kind" : "def"}, {"label" : "matchedS", "tail" : "(): RegexC[String]", "member" : "ceedubs.irrec.regex.RegexCOps.matchedS", "link" : "ceedubs\/irrec\/regex\/RegexCOps.html#matchedS:ceedubs.irrec.regex.RegexC[String]", "kind" : "def"}, {"label" : "withMatchedS", "tail" : "(): RegexC[(String, Out)]", "member" : "ceedubs.irrec.regex.RegexCOps.withMatchedS", "link" : "ceedubs\/irrec\/regex\/RegexCOps.html#withMatchedS:ceedubs.irrec.regex.RegexC[(String,Out)]", "kind" : "def"}, {"label" : "pprint", "tail" : "(): String", "member" : "ceedubs.irrec.regex.RegexCOps.pprint", "link" : "ceedubs\/irrec\/regex\/RegexCOps.html#pprint:String", "kind" : "def"}, {"member" : "ceedubs.irrec.regex.RegexCOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ceedubs\/irrec\/regex\/RegexCOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ceedubs\/irrec\/regex\/RegexCOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexCOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexCOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ceedubs\/irrec\/regex\/RegexCOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ceedubs\/irrec\/regex\/RegexCOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ceedubs\/irrec\/regex\/RegexCOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ceedubs\/irrec\/regex\/RegexCOps.html", "kind" : "class"}, {"name" : "ceedubs.irrec.regex.RegexOps", "shortDescription" : "", "members_class" : [{"label" : "matched", "tail" : "(): Regex[In, M, Chain[In]]", "member" : "ceedubs.irrec.regex.RegexOps.matched", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#matched:ceedubs.irrec.regex.Regex[In,M,cats.data.Chain[In]]", "kind" : "def"}, {"label" : "withMatched", "tail" : "(): Regex[In, M, (Chain[In], Out)]", "member" : "ceedubs.irrec.regex.RegexOps.withMatched", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#withMatched:ceedubs.irrec.regex.Regex[In,M,(cats.data.Chain[In],Out)]", "kind" : "def"}, {"label" : "compile", "tail" : "(): ParseState[In, Out]", "member" : "ceedubs.irrec.regex.RegexOps.compile", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#compile:ceedubs.irrec.regex.ParseState[In,Out]", "kind" : "def"}, {"label" : "matcher", "tail" : "(arg0: Foldable[F]): (F[In]) => Boolean", "member" : "ceedubs.irrec.regex.RegexOps.matcher", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#matcher[F[_]](implicitevidence$1:cats.Foldable[F]):F[In]=>Boolean", "kind" : "def"}, {"label" : "either", "tail" : "(o: Regex[In, M, Out2]): Regex[In, M, Either[Out, Out2]]", "member" : "ceedubs.irrec.regex.RegexOps.either", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#either[Out2](o:ceedubs.irrec.regex.Regex[In,M,Out2]):ceedubs.irrec.regex.Regex[In,M,Either[Out,Out2]]", "kind" : "def"}, {"label" : "|", "tail" : "(o: Regex[In, M, Out]): Regex[In, M, Out]", "member" : "ceedubs.irrec.regex.RegexOps.|", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#|(o:ceedubs.irrec.regex.Regex[In,M,Out]):ceedubs.irrec.regex.Regex[In,M,Out]", "kind" : "def"}, {"member" : "ceedubs.irrec.regex.RegexOps#<init>", "error" : "unsupported entity"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ceedubs\/irrec\/regex\/RegexOps.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.Any.toString", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#toString():String", "kind" : "def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ceedubs\/irrec\/regex\/RegexOps.html#==(x$1:Any):Boolean", "kind" : "final def"}], "class" : "ceedubs\/irrec\/regex\/RegexOps.html", "kind" : "class"}, {"name" : "ceedubs.irrec.regex.RegexPrettyPrinter", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html", "members_object" : [{"label" : "pprint", "tail" : ": (Regex[Char, Match[Char], _]) => String", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.pprint", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#pprint:ceedubs.irrec.regex.Regex[Char,ceedubs.irrec.regex.Match[Char],_]=>String", "kind" : "val"}, {"label" : "pprintWith", "tail" : "(f: (Boolean, In) => String)(eqA: Eq[In]): (Regex[In, Match[In], _]) => String", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.pprintWith", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#pprintWith[In](f:(Boolean,In)=>String)(impliciteqA:cats.Eq[In]):ceedubs.irrec.regex.Regex[In,ceedubs.irrec.regex.Match[In],_]=>String", "kind" : "def"}, {"label" : "parensMaybe", "tail" : "(currentPrecedence: Int, value: (Int, String), parensForEqualPrecedence: Boolean): String", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.parensMaybe", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#parensMaybe(currentPrecedence:Int,value:(Int,String),parensForEqualPrecedence:Boolean):String", "kind" : "def"}, {"label" : "showMatch", "tail" : "(f: (Boolean, A) => String)(eqA: Eq[A]): (Match[A]) => String", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.showMatch", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#showMatch[A](f:(Boolean,A)=>String)(impliciteqA:cats.Eq[A]):ceedubs.irrec.regex.Match[A]=>String", "kind" : "def"}, {"label" : "showChar", "tail" : "(inCharacterClass: Boolean): (Char) => String", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.showChar", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#showChar(inCharacterClass:Boolean):Char=>String", "kind" : "def"}, {"label" : "nonGraphicalToUnicode", "tail" : "(c: Char): String", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.nonGraphicalToUnicode", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#nonGraphicalToUnicode(c:Char):String", "kind" : "def"}, {"label" : "charClassCharToEscapedChar", "tail" : ": Map[Char, String]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.charClassCharToEscapedChar", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#charClassCharToEscapedChar:Map[Char,String]", "kind" : "val"}, {"label" : "nonCharClassCharToEscapedChar", "tail" : ": Map[Char, String]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.nonCharClassCharToEscapedChar", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#nonCharClassCharToEscapedChar:Map[Char,String]", "kind" : "val"}, {"label" : "specialCharClassCharToLit", "tail" : ": Map[Char, Char]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.specialCharClassCharToLit", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#specialCharClassCharToLit:Map[Char,Char]", "kind" : "val"}, {"label" : "specialNonCharClassCharToLit", "tail" : ": Map[Char, Char]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.specialNonCharClassCharToLit", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#specialNonCharClassCharToLit:Map[Char,Char]", "kind" : "val"}, {"label" : "whitespaceCharMappings", "tail" : ": Map[Char, Char]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.whitespaceCharMappings", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#whitespaceCharMappings:Map[Char,Char]", "kind" : "val"}, {"label" : "charClassCharsToEscape", "tail" : ": Set[Char]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.charClassCharsToEscape", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#charClassCharsToEscape:Set[Char]", "kind" : "val"}, {"label" : "nonCharClassCharsToEscape", "tail" : ": Set[Char]", "member" : "ceedubs.irrec.regex.RegexPrettyPrinter.nonCharClassCharsToEscape", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#nonCharClassCharsToEscape:Set[Char]", "kind" : "val"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/RegexPrettyPrinter$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "kind" : "object"}, {"name" : "ceedubs.irrec.regex.StateQueue", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/StateQueue$.html", "members_object" : [{"label" : "empty", "tail" : "(): StateQueue[A]", "member" : "ceedubs.irrec.regex.StateQueue.empty", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#empty[A]:ceedubs.irrec.regex.StateQueue[A]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/StateQueue$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "members_case class" : [{"label" : "insertWithoutId", "tail" : "(element: A): StateQueue[A]", "member" : "ceedubs.irrec.regex.StateQueue.insertWithoutId", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#insertWithoutId(element:A):ceedubs.irrec.regex.StateQueue[A]", "kind" : "def"}, {"label" : "insertUnique", "tail" : "(id: Int, element: A): StateQueue[A]", "member" : "ceedubs.irrec.regex.StateQueue.insertUnique", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#insertUnique(id:Int,element:A):ceedubs.irrec.regex.StateQueue[A]", "kind" : "def"}, {"member" : "ceedubs.irrec.regex.StateQueue#<init>", "error" : "unsupported entity"}, {"label" : "ids", "tail" : ": Set[Int]", "member" : "ceedubs.irrec.regex.StateQueue.ids", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#ids:Set[Int]", "kind" : "val"}, {"label" : "reversedElements", "tail" : ": List[A]", "member" : "ceedubs.irrec.regex.StateQueue.reversedElements", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#reversedElements:List[A]", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/StateQueue.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#notify():Unit", "kind" : "final def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#clone():Object", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/StateQueue.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "case class" : "ceedubs\/irrec\/regex\/StateQueue.html", "kind" : "case class"}, {"name" : "ceedubs.irrec.regex.Thread", "shortDescription" : "", "object" : "ceedubs\/irrec\/regex\/Thread$.html", "members_class" : [{"label" : "result", "tail" : "(): Option[A]", "member" : "ceedubs.irrec.regex.Thread.result", "link" : "ceedubs\/irrec\/regex\/Thread.html#result:Option[A]", "kind" : "def"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ceedubs\/irrec\/regex\/Thread.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "productElementName", "tail" : "(n: Int): String", "member" : "scala.Product.productElementName", "link" : "ceedubs\/irrec\/regex\/Thread.html#productElementName(n:Int):String", "kind" : "def"}, {"label" : "productPrefix", "tail" : "(): String", "member" : "scala.Product.productPrefix", "link" : "ceedubs\/irrec\/regex\/Thread.html#productPrefix:String", "kind" : "def"}, {"label" : "productIterator", "tail" : "(): Iterator[Any]", "member" : "scala.Product.productIterator", "link" : "ceedubs\/irrec\/regex\/Thread.html#productIterator:Iterator[Any]", "kind" : "def"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/Thread.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/Thread.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/Thread.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/Thread.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/Thread.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/Thread.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/Thread.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Thread.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Thread.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Thread.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/Thread.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/Thread.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/Thread.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/Thread.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/Thread.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/Thread.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/Thread.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/Thread.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/Thread.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "productElement", "tail" : "(n: Int): Any", "member" : "scala.Product.productElement", "link" : "ceedubs\/irrec\/regex\/Thread.html#productElement(n:Int):Any", "kind" : "abstract def"}, {"label" : "productArity", "tail" : "(): Int", "member" : "scala.Product.productArity", "link" : "ceedubs\/irrec\/regex\/Thread.html#productArity:Int", "kind" : "abstract def"}, {"label" : "canEqual", "tail" : "(that: Any): Boolean", "member" : "scala.Equals.canEqual", "link" : "ceedubs\/irrec\/regex\/Thread.html#canEqual(that:Any):Boolean", "kind" : "abstract def"}], "members_object" : [{"label" : "Cont", "tail" : "", "member" : "ceedubs.irrec.regex.Thread.Cont", "link" : "ceedubs\/irrec\/regex\/Thread$.html#Cont[In,A]extendsThread[In,A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "Accept", "tail" : "", "member" : "ceedubs.irrec.regex.Thread.Accept", "link" : "ceedubs\/irrec\/regex\/Thread$.html#Accept[In,A]extendsThread[In,A]withProductwithSerializable", "kind" : "final case class"}, {"label" : "synchronized", "tail" : "(arg0: => T0): T0", "member" : "scala.AnyRef.synchronized", "link" : "ceedubs\/irrec\/regex\/Thread$.html#synchronized[T0](x$1:=>T0):T0", "kind" : "final def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.AnyRef.##", "link" : "ceedubs\/irrec\/regex\/Thread$.html###:Int", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.!=", "link" : "ceedubs\/irrec\/regex\/Thread$.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.AnyRef.==", "link" : "ceedubs\/irrec\/regex\/Thread$.html#==(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "ne", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.ne", "link" : "ceedubs\/irrec\/regex\/Thread$.html#ne(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "eq", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.eq", "link" : "ceedubs\/irrec\/regex\/Thread$.html#eq(x$1:AnyRef):Boolean", "kind" : "final def"}, {"label" : "finalize", "tail" : "(): Unit", "member" : "scala.AnyRef.finalize", "link" : "ceedubs\/irrec\/regex\/Thread$.html#finalize():Unit", "kind" : "def"}, {"label" : "wait", "tail" : "(): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Thread$.html#wait():Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long, arg1: Int): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Thread$.html#wait(x$1:Long,x$2:Int):Unit", "kind" : "final def"}, {"label" : "wait", "tail" : "(arg0: Long): Unit", "member" : "scala.AnyRef.wait", "link" : "ceedubs\/irrec\/regex\/Thread$.html#wait(x$1:Long):Unit", "kind" : "final def"}, {"label" : "notifyAll", "tail" : "(): Unit", "member" : "scala.AnyRef.notifyAll", "link" : "ceedubs\/irrec\/regex\/Thread$.html#notifyAll():Unit", "kind" : "final def"}, {"label" : "notify", "tail" : "(): Unit", "member" : "scala.AnyRef.notify", "link" : "ceedubs\/irrec\/regex\/Thread$.html#notify():Unit", "kind" : "final def"}, {"label" : "toString", "tail" : "(): String", "member" : "scala.AnyRef.toString", "link" : "ceedubs\/irrec\/regex\/Thread$.html#toString():String", "kind" : "def"}, {"label" : "clone", "tail" : "(): AnyRef", "member" : "scala.AnyRef.clone", "link" : "ceedubs\/irrec\/regex\/Thread$.html#clone():Object", "kind" : "def"}, {"label" : "equals", "tail" : "(arg0: AnyRef): Boolean", "member" : "scala.AnyRef.equals", "link" : "ceedubs\/irrec\/regex\/Thread$.html#equals(x$1:Object):Boolean", "kind" : "def"}, {"label" : "hashCode", "tail" : "(): Int", "member" : "scala.AnyRef.hashCode", "link" : "ceedubs\/irrec\/regex\/Thread$.html#hashCode():Int", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyRef]", "member" : "scala.AnyRef.getClass", "link" : "ceedubs\/irrec\/regex\/Thread$.html#getClass():Class[_]", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/Thread$.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/Thread$.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}], "class" : "ceedubs\/irrec\/regex\/Thread.html", "kind" : "class"}, {"name" : "ceedubs.irrec.regex.ThreadId", "shortDescription" : "", "members_case class" : [{"member" : "ceedubs.irrec.regex.ThreadId#<init>", "error" : "unsupported entity"}, {"label" : "asInt", "tail" : ": Int", "member" : "ceedubs.irrec.regex.ThreadId.asInt", "link" : "ceedubs\/irrec\/regex\/ThreadId.html#asInt:Int", "kind" : "val"}, {"label" : "productElementNames", "tail" : "(): Iterator[String]", "member" : "scala.Product.productElementNames", "link" : "ceedubs\/irrec\/regex\/ThreadId.html#productElementNames:Iterator[String]", "kind" : "def"}, {"label" : "getClass", "tail" : "(): Class[_ <: AnyVal]", "member" : "scala.AnyVal.getClass", "link" : "ceedubs\/irrec\/regex\/ThreadId.html#getClass():Class[_<:AnyVal]", "kind" : "def"}, {"label" : "##", "tail" : "(): Int", "member" : "scala.Any.##", "link" : "ceedubs\/irrec\/regex\/ThreadId.html###:Int", "kind" : "final def"}, {"label" : "asInstanceOf", "tail" : "(): T0", "member" : "scala.Any.asInstanceOf", "link" : "ceedubs\/irrec\/regex\/ThreadId.html#asInstanceOf[T0]:T0", "kind" : "final def"}, {"label" : "isInstanceOf", "tail" : "(): Boolean", "member" : "scala.Any.isInstanceOf", "link" : "ceedubs\/irrec\/regex\/ThreadId.html#isInstanceOf[T0]:Boolean", "kind" : "final def"}, {"label" : "!=", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.!=", "link" : "ceedubs\/irrec\/regex\/ThreadId.html#!=(x$1:Any):Boolean", "kind" : "final def"}, {"label" : "==", "tail" : "(arg0: Any): Boolean", "member" : "scala.Any.==", "link" : "ceedubs\/irrec\/regex\/ThreadId.html#==(x$1:Any):Boolean", "kind" : "final def"}], "case class" : "ceedubs\/irrec\/regex\/ThreadId.html", "kind" : "case class"}]};